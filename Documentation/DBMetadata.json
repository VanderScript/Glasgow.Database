{
    "DatabaseInfo": "{\"ServerName\":\"CLERIC-DSKTP\",\"DatabaseName\":\"Glasgow.Database\",\"SQLServerVersion\":\"Microsoft SQL Server 2022 (RTM-GDR) (KB5046861) - 16.0.1135.2 (X64) \\n\\tOct 18 2024 15:31:58 \\n\\tCopyright (C) 2022 Microsoft Corporation\\n\\tDeveloper Edition (64-bit) on Windows 10 Pro 10.0 <X64> (Build 26100: ) (Hypervisor)\\n\"}",
    "Schemas": [
        {
            "SchemaName": "dbo",
            "schema_id": 1,
            "principal_id": 1,
            "SchemaOwner": "dbo"
        },
        {
            "SchemaName": "guest",
            "schema_id": 2,
            "principal_id": 2,
            "SchemaOwner": "guest"
        },
        {
            "SchemaName": "INFORMATION_SCHEMA",
            "schema_id": 3,
            "principal_id": 3,
            "SchemaOwner": "INFORMATION_SCHEMA"
        },
        {
            "SchemaName": "sys",
            "schema_id": 4,
            "principal_id": 4,
            "SchemaOwner": "sys"
        },
        {
            "SchemaName": "auth",
            "schema_id": 5,
            "principal_id": 1,
            "SchemaOwner": "dbo"
        },
        {
            "SchemaName": "core",
            "schema_id": 6,
            "principal_id": 1,
            "SchemaOwner": "dbo"
        },
        {
            "SchemaName": "forge",
            "schema_id": 7,
            "principal_id": 1,
            "SchemaOwner": "dbo"
        },
        {
            "SchemaName": "db_owner",
            "schema_id": 16384,
            "principal_id": 16384,
            "SchemaOwner": "db_owner"
        },
        {
            "SchemaName": "db_accessadmin",
            "schema_id": 16385,
            "principal_id": 16385,
            "SchemaOwner": "db_accessadmin"
        },
        {
            "SchemaName": "db_securityadmin",
            "schema_id": 16386,
            "principal_id": 16386,
            "SchemaOwner": "db_securityadmin"
        },
        {
            "SchemaName": "db_ddladmin",
            "schema_id": 16387,
            "principal_id": 16387,
            "SchemaOwner": "db_ddladmin"
        },
        {
            "SchemaName": "db_backupoperator",
            "schema_id": 16389,
            "principal_id": 16389,
            "SchemaOwner": "db_backupoperator"
        },
        {
            "SchemaName": "db_datareader",
            "schema_id": 16390,
            "principal_id": 16390,
            "SchemaOwner": "db_datareader"
        },
        {
            "SchemaName": "db_datawriter",
            "schema_id": 16391,
            "principal_id": 16391,
            "SchemaOwner": "db_datawriter"
        },
        {
            "SchemaName": "db_denydatareader",
            "schema_id": 16392,
            "principal_id": 16392,
            "SchemaOwner": "db_denydatareader"
        },
        {
            "SchemaName": "db_denydatawriter",
            "schema_id": 16393,
            "principal_id": 16393,
            "SchemaOwner": "db_denydatawriter"
        }
    ],
    "Tables": [
        {
            "SchemaName": "forge",
            "TableName": "inventory_status",
            "ApproximateRowCount": 5,
            "TableType": "Regular Table",
            "object_id": 34099162,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_status",
                    "ColumnName": "inventory_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 34099162
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_status",
                    "ColumnName": "inventory_status_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 34099162
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_status",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 34099162
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_status",
                    "PrimaryKeyName": "PK__inventor__6A91AB6C58FA8A94",
                    "ColumnName": "inventory_status_id",
                    "KeySequence": 1,
                    "object_id": 34099162
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "batch_type",
            "ApproximateRowCount": 2,
            "TableType": "Regular Table",
            "object_id": 82099333,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch_type",
                    "ColumnName": "batch_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 82099333
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch_type",
                    "ColumnName": "batch_type_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 82099333
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch_type",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 82099333
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch_type",
                    "PrimaryKeyName": "PK__batch_ty__9424D70D6870B59C",
                    "ColumnName": "batch_type_id",
                    "KeySequence": 1,
                    "object_id": 82099333
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "wave_state",
            "ApproximateRowCount": 5,
            "TableType": "Regular Table",
            "object_id": 130099504,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "wave_state",
                    "ColumnName": "wave_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 130099504
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave_state",
                    "ColumnName": "wave_state_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 130099504
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave_state",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 130099504
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "wave_state",
                    "PrimaryKeyName": "PK__wave_sta__3A09568B1AB0EB12",
                    "ColumnName": "wave_state_id",
                    "KeySequence": 1,
                    "object_id": 130099504
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "batch_state",
            "ApproximateRowCount": 4,
            "TableType": "Regular Table",
            "object_id": 178099675,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch_state",
                    "ColumnName": "batch_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 178099675
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch_state",
                    "ColumnName": "batch_state_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 178099675
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch_state",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 178099675
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch_state",
                    "PrimaryKeyName": "PK__batch_st__D5705CE7CAD253CB",
                    "ColumnName": "batch_state_id",
                    "KeySequence": 1,
                    "object_id": 178099675
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "validation_type",
            "ApproximateRowCount": 3,
            "TableType": "Regular Table",
            "object_id": 226099846,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "validation_type",
                    "ColumnName": "validation_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 226099846
                },
                {
                    "SchemaName": "forge",
                    "TableName": "validation_type",
                    "ColumnName": "validation_type_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 226099846
                },
                {
                    "SchemaName": "forge",
                    "TableName": "validation_type",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 226099846
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "validation_type",
                    "PrimaryKeyName": "PK__validati__A9F7244C5BC9446F",
                    "ColumnName": "validation_type_id",
                    "KeySequence": 1,
                    "object_id": 226099846
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "movement_type",
            "ApproximateRowCount": 16,
            "TableType": "Regular Table",
            "object_id": 274100017,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "movement_type",
                    "ColumnName": "movement_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 274100017
                },
                {
                    "SchemaName": "forge",
                    "TableName": "movement_type",
                    "ColumnName": "movement_type_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 274100017
                },
                {
                    "SchemaName": "forge",
                    "TableName": "movement_type",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 274100017
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "movement_type",
                    "PrimaryKeyName": "PK__movement__C171E2A9D7B54074",
                    "ColumnName": "movement_type_id",
                    "KeySequence": 1,
                    "object_id": 274100017
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "task_state",
            "ApproximateRowCount": 9,
            "TableType": "Regular Table",
            "object_id": 322100188,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "task_state",
                    "ColumnName": "task_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 322100188
                },
                {
                    "SchemaName": "forge",
                    "TableName": "task_state",
                    "ColumnName": "task_state_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 322100188
                },
                {
                    "SchemaName": "forge",
                    "TableName": "task_state",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 322100188
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "task_state",
                    "PrimaryKeyName": "PK__task_sta__CC259A130B5FF77F",
                    "ColumnName": "task_state_id",
                    "KeySequence": 1,
                    "object_id": 322100188
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "fill_method",
            "ApproximateRowCount": 3,
            "TableType": "Regular Table",
            "object_id": 370100359,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "fill_method",
                    "ColumnName": "fill_method_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 370100359
                },
                {
                    "SchemaName": "forge",
                    "TableName": "fill_method",
                    "ColumnName": "fill_method_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 370100359
                },
                {
                    "SchemaName": "forge",
                    "TableName": "fill_method",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 370100359
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "fill_method",
                    "PrimaryKeyName": "PK__fill_met__98A452286CE9CEA2",
                    "ColumnName": "fill_method_id",
                    "KeySequence": 1,
                    "object_id": 370100359
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "wave_transfer_order",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 418100530,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "wave_transfer_order",
                    "ColumnName": "wave_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 418100530
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave_transfer_order",
                    "ColumnName": "transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 418100530
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "wave_transfer_order",
                    "PrimaryKeyName": "PK__wave_tra__8C2C89B69821FFEC",
                    "ColumnName": "wave_id",
                    "KeySequence": 1,
                    "object_id": 418100530
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave_transfer_order",
                    "PrimaryKeyName": "PK__wave_tra__8C2C89B69821FFEC",
                    "ColumnName": "transfer_order_id",
                    "KeySequence": 2,
                    "object_id": 418100530
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "wave_transfer_order",
                    "ForeignKeyName": "FK__wave_tran__wave___51300E55",
                    "ColumnName": "wave_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "wave",
                    "ReferencedColumnName": "wave_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 418100530
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave_transfer_order",
                    "ForeignKeyName": "FK__wave_tran__trans__503BEA1C",
                    "ColumnName": "transfer_order_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "transfer_order",
                    "ReferencedColumnName": "transfer_order_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 418100530
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "wave",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 450100644,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ColumnName": "wave_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 450100644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ColumnName": "batch_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 450100644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ColumnName": "wave_name",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 450100644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ColumnName": "route_name",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 450100644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ColumnName": "state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 450100644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 450100644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ColumnName": "date_started_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 450100644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ColumnName": "date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 450100644
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "PrimaryKeyName": "PK__wave__028E35A3EAFBADFE",
                    "ColumnName": "wave_id",
                    "KeySequence": 1,
                    "object_id": 450100644
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ForeignKeyName": "FK__wave__state_id__531856C7",
                    "ColumnName": "state_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "wave_state",
                    "ReferencedColumnName": "wave_state_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 450100644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "wave",
                    "ForeignKeyName": "FK__wave__batch_id__5224328E",
                    "ColumnName": "batch_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "batch",
                    "ReferencedColumnName": "batch_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 450100644
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "batch_transfer_order",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 482100758,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch_transfer_order",
                    "ColumnName": "batch_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 482100758
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch_transfer_order",
                    "ColumnName": "transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 482100758
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch_transfer_order",
                    "PrimaryKeyName": "PK__batch_tr__555EB8243D595BDE",
                    "ColumnName": "batch_id",
                    "KeySequence": 1,
                    "object_id": 482100758
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch_transfer_order",
                    "PrimaryKeyName": "PK__batch_tr__555EB8243D595BDE",
                    "ColumnName": "transfer_order_id",
                    "KeySequence": 2,
                    "object_id": 482100758
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch_transfer_order",
                    "ForeignKeyName": "FK__batch_tra__batch__540C7B00",
                    "ColumnName": "batch_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "batch",
                    "ReferencedColumnName": "batch_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 482100758
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch_transfer_order",
                    "ForeignKeyName": "FK__batch_tra__trans__55009F39",
                    "ColumnName": "transfer_order_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "transfer_order",
                    "ReferencedColumnName": "transfer_order_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 482100758
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "fulfillment_assignment",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 514100872,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_assignment",
                    "ColumnName": "fulfillment_assignment_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 514100872
                },
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_assignment",
                    "ColumnName": "transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 514100872
                },
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_assignment",
                    "ColumnName": "order_line_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 514100872
                },
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_assignment",
                    "ColumnName": "fulfillment_method_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 514100872
                },
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_assignment",
                    "ColumnName": "precedence_order",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 514100872
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_assignment",
                    "PrimaryKeyName": "PK__fulfillm__9D1840C05FCEFC25",
                    "ColumnName": "fulfillment_assignment_id",
                    "KeySequence": 1,
                    "object_id": 514100872
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_assignment",
                    "ForeignKeyName": "FK__fulfillme__fulfi__55F4C372",
                    "ColumnName": "fulfillment_method_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "fulfillment_method",
                    "ReferencedColumnName": "fulfillment_method_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 514100872
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "fulfillment_method",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 546100986,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_method",
                    "ColumnName": "fulfillment_method_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 546100986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_method",
                    "ColumnName": "method_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 546100986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_method",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 546100986
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "fulfillment_method",
                    "PrimaryKeyName": "PK__fulfillm__95F189736CA9A538",
                    "ColumnName": "fulfillment_method_id",
                    "KeySequence": 1,
                    "object_id": 546100986
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "stock_status",
            "ApproximateRowCount": 8,
            "TableType": "Regular Table",
            "object_id": 594101157,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "stock_status",
                    "ColumnName": "stock_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 594101157
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock_status",
                    "ColumnName": "stock_status_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 594101157
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock_status",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 594101157
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "stock_status",
                    "PrimaryKeyName": "PK__stock_st__06A52A2E3EB9014C",
                    "ColumnName": "stock_status_id",
                    "KeySequence": 1,
                    "object_id": 594101157
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "stock",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 642101328,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ColumnName": "stock_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ColumnName": "item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ColumnName": "storage_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ColumnName": "quantity_on_hand",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ColumnName": "quantity_allocated",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ColumnName": "stock_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ColumnName": "date_modified_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 642101328
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "PrimaryKeyName": "PK__stock__E8666862EE4802BC",
                    "ColumnName": "stock_id",
                    "KeySequence": 1,
                    "object_id": 642101328
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ForeignKeyName": "FK__stock__stock_sta__58D1301D",
                    "ColumnName": "stock_status_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "stock_status",
                    "ReferencedColumnName": "stock_status_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ForeignKeyName": "FK__stock__storage_l__57DD0BE4",
                    "ColumnName": "storage_location_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "storage_location",
                    "ReferencedColumnName": "storage_location_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 642101328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "stock",
                    "ForeignKeyName": "FK__stock__item_uom___56E8E7AB",
                    "ColumnName": "item_uom_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "item_uom",
                    "ReferencedColumnName": "item_uom_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 642101328
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "batch",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 674101442,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ColumnName": "batch_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 674101442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ColumnName": "batch_name",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 674101442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ColumnName": "batch_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 674101442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ColumnName": "batch_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 674101442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 674101442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ColumnName": "date_started_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 674101442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ColumnName": "date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 674101442
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "PrimaryKeyName": "PK__batch__DBFC043161FF62F7",
                    "ColumnName": "batch_id",
                    "KeySequence": 1,
                    "object_id": 674101442
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ForeignKeyName": "FK__batch__batch_typ__59C55456",
                    "ColumnName": "batch_type_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "batch_type",
                    "ReferencedColumnName": "batch_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 674101442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "batch",
                    "ForeignKeyName": "FK__batch__batch_sta__5AB9788F",
                    "ColumnName": "batch_state_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "batch_state",
                    "ReferencedColumnName": "batch_state_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 674101442
                }
            ]
        },
        {
            "SchemaName": "auth",
            "TableName": "user_role_mapping",
            "ApproximateRowCount": 1,
            "TableType": "Regular Table",
            "object_id": 901578250,
            "Columns": [
                {
                    "SchemaName": "auth",
                    "TableName": "user_role_mapping",
                    "ColumnName": "mapping_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": true,
                    "object_id": 901578250
                },
                {
                    "SchemaName": "auth",
                    "TableName": "user_role_mapping",
                    "ColumnName": "user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 901578250
                },
                {
                    "SchemaName": "auth",
                    "TableName": "user_role_mapping",
                    "ColumnName": "role_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 901578250
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "user_role_mapping",
                    "PrimaryKeyName": "PK__user_rol__5AE9004563AF4315",
                    "ColumnName": "mapping_id",
                    "KeySequence": 1,
                    "object_id": 901578250
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "user_role_mapping",
                    "ForeignKeyName": "FK__user_role__role___2EDAF651",
                    "ColumnName": "role_id",
                    "ReferencedSchemaName": "auth",
                    "ReferencedTableName": "roles",
                    "ReferencedColumnName": "role_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 901578250
                },
                {
                    "SchemaName": "auth",
                    "TableName": "user_role_mapping",
                    "ForeignKeyName": "FK__user_role__user___2FCF1A8A",
                    "ColumnName": "user_id",
                    "ReferencedSchemaName": "auth",
                    "ReferencedTableName": "users",
                    "ReferencedColumnName": "user_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 901578250
                }
            ]
        },
        {
            "SchemaName": "auth",
            "TableName": "role_claim_mapping",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 933578364,
            "Columns": [
                {
                    "SchemaName": "auth",
                    "TableName": "role_claim_mapping",
                    "ColumnName": "mapping_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": true,
                    "object_id": 933578364
                },
                {
                    "SchemaName": "auth",
                    "TableName": "role_claim_mapping",
                    "ColumnName": "role_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 933578364
                },
                {
                    "SchemaName": "auth",
                    "TableName": "role_claim_mapping",
                    "ColumnName": "claim_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 933578364
                },
                {
                    "SchemaName": "auth",
                    "TableName": "role_claim_mapping",
                    "ColumnName": "level",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 933578364
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "role_claim_mapping",
                    "PrimaryKeyName": "PK__role_cla__5AE900453E53F517",
                    "ColumnName": "mapping_id",
                    "KeySequence": 1,
                    "object_id": 933578364
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "role_claim_mapping",
                    "ForeignKeyName": "FK__role_clai__claim__32AB8735",
                    "ColumnName": "claim_id",
                    "ReferencedSchemaName": "auth",
                    "ReferencedTableName": "claim_list",
                    "ReferencedColumnName": "claim_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 933578364
                },
                {
                    "SchemaName": "auth",
                    "TableName": "role_claim_mapping",
                    "ForeignKeyName": "FK__role_clai__level__30C33EC3",
                    "ColumnName": "level",
                    "ReferencedSchemaName": "auth",
                    "ReferencedTableName": "access_level_map",
                    "ReferencedColumnName": "level",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 933578364
                },
                {
                    "SchemaName": "auth",
                    "TableName": "role_claim_mapping",
                    "ForeignKeyName": "FK__role_clai__role___31B762FC",
                    "ColumnName": "role_id",
                    "ReferencedSchemaName": "auth",
                    "ReferencedTableName": "roles",
                    "ReferencedColumnName": "role_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 933578364
                }
            ]
        },
        {
            "SchemaName": "auth",
            "TableName": "user_sessions",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 965578478,
            "Columns": [
                {
                    "SchemaName": "auth",
                    "TableName": "user_sessions",
                    "ColumnName": "session_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": true,
                    "object_id": 965578478
                },
                {
                    "SchemaName": "auth",
                    "TableName": "user_sessions",
                    "ColumnName": "user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 965578478
                },
                {
                    "SchemaName": "auth",
                    "TableName": "user_sessions",
                    "ColumnName": "session_token",
                    "DataType": "varchar",
                    "max_length": 2000,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 965578478
                },
                {
                    "SchemaName": "auth",
                    "TableName": "user_sessions",
                    "ColumnName": "refresh_token",
                    "DataType": "varchar",
                    "max_length": 244,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 965578478
                },
                {
                    "SchemaName": "auth",
                    "TableName": "user_sessions",
                    "ColumnName": "date_expires_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 965578478
                },
                {
                    "SchemaName": "auth",
                    "TableName": "user_sessions",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 965578478
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "user_sessions",
                    "PrimaryKeyName": "PK__user_ses__69B13FDCFE0706CF",
                    "ColumnName": "session_id",
                    "KeySequence": 1,
                    "object_id": 965578478
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "user_sessions",
                    "ForeignKeyName": "FK__user_sess__user___339FAB6E",
                    "ColumnName": "user_id",
                    "ReferencedSchemaName": "auth",
                    "ReferencedTableName": "users",
                    "ReferencedColumnName": "user_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 965578478
                }
            ]
        },
        {
            "SchemaName": "auth",
            "TableName": "claim_list",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 997578592,
            "Columns": [
                {
                    "SchemaName": "auth",
                    "TableName": "claim_list",
                    "ColumnName": "claim_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": true,
                    "object_id": 997578592
                },
                {
                    "SchemaName": "auth",
                    "TableName": "claim_list",
                    "ColumnName": "claim_name",
                    "DataType": "varchar",
                    "max_length": 32,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 997578592
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "claim_list",
                    "PrimaryKeyName": "PK__claim_li__F9CC08967D3615F8",
                    "ColumnName": "claim_id",
                    "KeySequence": 1,
                    "object_id": 997578592
                }
            ]
        },
        {
            "SchemaName": "auth",
            "TableName": "access_level_map",
            "ApproximateRowCount": 5,
            "TableType": "Regular Table",
            "object_id": 1029578706,
            "Columns": [
                {
                    "SchemaName": "auth",
                    "TableName": "access_level_map",
                    "ColumnName": "access_level_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": true,
                    "object_id": 1029578706
                },
                {
                    "SchemaName": "auth",
                    "TableName": "access_level_map",
                    "ColumnName": "level",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1029578706
                },
                {
                    "SchemaName": "auth",
                    "TableName": "access_level_map",
                    "ColumnName": "lvl_description",
                    "DataType": "varchar",
                    "max_length": 32,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1029578706
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "access_level_map",
                    "PrimaryKeyName": "PK__access_l__EFC9396E5CE7E3B6",
                    "ColumnName": "access_level_id",
                    "KeySequence": 1,
                    "object_id": 1029578706
                }
            ]
        },
        {
            "SchemaName": "auth",
            "TableName": "roles",
            "ApproximateRowCount": 5,
            "TableType": "Regular Table",
            "object_id": 1077578877,
            "Columns": [
                {
                    "SchemaName": "auth",
                    "TableName": "roles",
                    "ColumnName": "role_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": true,
                    "object_id": 1077578877
                },
                {
                    "SchemaName": "auth",
                    "TableName": "roles",
                    "ColumnName": "role",
                    "DataType": "varchar",
                    "max_length": 32,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1077578877
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "roles",
                    "PrimaryKeyName": "PK__roles__760965CC3A61A311",
                    "ColumnName": "role_id",
                    "KeySequence": 1,
                    "object_id": 1077578877
                }
            ]
        },
        {
            "SchemaName": "auth",
            "TableName": "users",
            "ApproximateRowCount": 3,
            "TableType": "Regular Table",
            "object_id": 1125579048,
            "Columns": [
                {
                    "SchemaName": "auth",
                    "TableName": "users",
                    "ColumnName": "user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "DefaultValue": "(newid())",
                    "object_id": 1125579048
                },
                {
                    "SchemaName": "auth",
                    "TableName": "users",
                    "ColumnName": "username",
                    "DataType": "varchar",
                    "max_length": 32,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1125579048
                },
                {
                    "SchemaName": "auth",
                    "TableName": "users",
                    "ColumnName": "password_hash",
                    "DataType": "varchar",
                    "max_length": 244,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1125579048
                },
                {
                    "SchemaName": "auth",
                    "TableName": "users",
                    "ColumnName": "password_salt",
                    "DataType": "varchar",
                    "max_length": 244,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1125579048
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "auth",
                    "TableName": "users",
                    "PrimaryKeyName": "PK__users__B9BE370F49A1C329",
                    "ColumnName": "user_id",
                    "KeySequence": 1,
                    "object_id": 1125579048
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "status_code",
            "ApproximateRowCount": 4,
            "TableType": "Regular Table",
            "object_id": 1173579219,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "status_code",
                    "ColumnName": "status_code_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1173579219
                },
                {
                    "SchemaName": "core",
                    "TableName": "status_code",
                    "ColumnName": "status_code",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1173579219
                },
                {
                    "SchemaName": "core",
                    "TableName": "status_code",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1173579219
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "status_code",
                    "PrimaryKeyName": "PK__status_c__C3A169145A081800",
                    "ColumnName": "status_code_id",
                    "KeySequence": 1,
                    "object_id": 1173579219
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "transaction_action_type",
            "ApproximateRowCount": 5,
            "TableType": "Regular Table",
            "object_id": 1221579390,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "transaction_action_type",
                    "ColumnName": "action_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1221579390
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_action_type",
                    "ColumnName": "action_code",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1221579390
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_action_type",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1221579390
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "transaction_action_type",
                    "PrimaryKeyName": "PK__transact__980094F1C2D749D7",
                    "ColumnName": "action_type_id",
                    "KeySequence": 1,
                    "object_id": 1221579390
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "transfer_order_destination",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1269579561,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "transfer_order_destination",
                    "ColumnName": "transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1269579561
                },
                {
                    "SchemaName": "core",
                    "TableName": "transfer_order_destination",
                    "ColumnName": "destination_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1269579561
                },
                {
                    "SchemaName": "core",
                    "TableName": "transfer_order_destination",
                    "ColumnName": "priority",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1269579561
                },
                {
                    "SchemaName": "core",
                    "TableName": "transfer_order_destination",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1269579561
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "transfer_order_destination",
                    "PrimaryKeyName": "PK__transfer__EF7BD460BE3D29C6",
                    "ColumnName": "transfer_order_id",
                    "KeySequence": 1,
                    "object_id": 1269579561
                },
                {
                    "SchemaName": "core",
                    "TableName": "transfer_order_destination",
                    "PrimaryKeyName": "PK__transfer__EF7BD460BE3D29C6",
                    "ColumnName": "destination_id",
                    "KeySequence": 2,
                    "object_id": 1269579561
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "destination",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1301579675,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ColumnName": "destination_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1301579675
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ColumnName": "destination_code",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1301579675
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1301579675
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ColumnName": "destination_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1301579675
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ColumnName": "priority",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1301579675
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ColumnName": "state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1301579675
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1301579675
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "PrimaryKeyName": "PK__destinat__5501539138B518FF",
                    "ColumnName": "destination_id",
                    "KeySequence": 1,
                    "object_id": 1301579675
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ForeignKeyName": "FK__destinati__desti__3493CFA7",
                    "ColumnName": "destination_type_id",
                    "ReferencedSchemaName": "core",
                    "ReferencedTableName": "destination_type",
                    "ReferencedColumnName": "destination_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1301579675
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination",
                    "ForeignKeyName": "FK__destinati__state__3587F3E0",
                    "ColumnName": "state_id",
                    "ReferencedSchemaName": "core",
                    "ReferencedTableName": "destination_state",
                    "ReferencedColumnName": "destination_state_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1301579675
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "lpn",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1349579846,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ColumnName": "lpn_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1349579846
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ColumnName": "lpn_number",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1349579846
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ColumnName": "transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1349579846
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ColumnName": "current_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1349579846
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ColumnName": "state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1349579846
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1349579846
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ColumnName": "date_assigned_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1349579846
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ColumnName": "date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1349579846
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "PrimaryKeyName": "PK__lpn__13BEDB6401151D91",
                    "ColumnName": "lpn_id",
                    "KeySequence": 1,
                    "object_id": 1349579846
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "lpn",
                    "ForeignKeyName": "FK__lpn__state_id__367C1819",
                    "ColumnName": "state_id",
                    "ReferencedSchemaName": "core",
                    "ReferencedTableName": "lpn_state",
                    "ReferencedColumnName": "lpn_state_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1349579846
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "destination_type",
            "ApproximateRowCount": 10,
            "TableType": "Regular Table",
            "object_id": 1397580017,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "destination_type",
                    "ColumnName": "destination_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1397580017
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination_type",
                    "ColumnName": "type_code",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1397580017
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination_type",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1397580017
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "destination_type",
                    "PrimaryKeyName": "PK__destinat__C2BE207EF6913838",
                    "ColumnName": "destination_type_id",
                    "KeySequence": 1,
                    "object_id": 1397580017
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "destination_state",
            "ApproximateRowCount": 6,
            "TableType": "Regular Table",
            "object_id": 1445580188,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "destination_state",
                    "ColumnName": "destination_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1445580188
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination_state",
                    "ColumnName": "state_code",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1445580188
                },
                {
                    "SchemaName": "core",
                    "TableName": "destination_state",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1445580188
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "destination_state",
                    "PrimaryKeyName": "PK__destinat__8469FA8F3F17D090",
                    "ColumnName": "destination_state_id",
                    "KeySequence": 1,
                    "object_id": 1445580188
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "lpn_state",
            "ApproximateRowCount": 11,
            "TableType": "Regular Table",
            "object_id": 1493580359,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "lpn_state",
                    "ColumnName": "lpn_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1493580359
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn_state",
                    "ColumnName": "state_code",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1493580359
                },
                {
                    "SchemaName": "core",
                    "TableName": "lpn_state",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1493580359
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "lpn_state",
                    "PrimaryKeyName": "PK__lpn_stat__F5FE42D2B4F00C1C",
                    "ColumnName": "lpn_state_id",
                    "KeySequence": 1,
                    "object_id": 1493580359
                }
            ]
        },
        {
            "SchemaName": "core",
            "TableName": "transaction_log",
            "ApproximateRowCount": 2,
            "TableType": "Regular Table",
            "object_id": 1541580530,
            "Columns": [
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "transaction_log_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "DefaultValue": "(newid())",
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "logging_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "source_system",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "event_timestamp",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": false,
                    "is_identity": false,
                    "DefaultValue": "(getutcdate())",
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "object_name",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "object_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "action_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "status_code_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "data_before",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "data_after",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "diff_data",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "message",
                    "DataType": "nvarchar",
                    "max_length": 2000,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "context_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ColumnName": "created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": false,
                    "is_identity": false,
                    "DefaultValue": "(getutcdate())",
                    "object_id": 1541580530
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "PrimaryKeyName": "PK__transact__5147C43836BED0AB",
                    "ColumnName": "transaction_log_id",
                    "KeySequence": 1,
                    "object_id": 1541580530
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ForeignKeyName": "FK__transacti__statu__3864608B",
                    "ColumnName": "status_code_id",
                    "ReferencedSchemaName": "core",
                    "ReferencedTableName": "status_code",
                    "ReferencedColumnName": "status_code_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1541580530
                },
                {
                    "SchemaName": "core",
                    "TableName": "transaction_log",
                    "ForeignKeyName": "FK__transacti__actio__37703C52",
                    "ColumnName": "action_type_id",
                    "ReferencedSchemaName": "core",
                    "ReferencedTableName": "transaction_action_type",
                    "ReferencedColumnName": "action_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1541580530
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "transfer_order_status",
            "ApproximateRowCount": 9,
            "TableType": "Regular Table",
            "object_id": 1573580644,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order_status",
                    "ColumnName": "transfer_order_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1573580644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order_status",
                    "ColumnName": "transfer_order_status_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1573580644
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order_status",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1573580644
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order_status",
                    "PrimaryKeyName": "PK__transfer__60C2946E5C626E75",
                    "ColumnName": "transfer_order_status_id",
                    "KeySequence": 1,
                    "object_id": 1573580644
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "transfer_order_type",
            "ApproximateRowCount": 3,
            "TableType": "Regular Table",
            "object_id": 1621580815,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order_type",
                    "ColumnName": "transfer_order_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1621580815
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order_type",
                    "ColumnName": "transfer_order_type_code",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1621580815
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order_type",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1621580815
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order_type",
                    "PrimaryKeyName": "PK__transfer__4CCA56B0995A0A5C",
                    "ColumnName": "transfer_order_type_id",
                    "KeySequence": 1,
                    "object_id": 1621580815
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "item_uom_override",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1669580986,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "item_uom_override_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "override_code",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "length",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "width",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "height",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "volume",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "weight",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "max_per_location",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "stackable",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ColumnName": "date_updated_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1669580986
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "PrimaryKeyName": "PK__item_uom__263FCC7DBDD35C51",
                    "ColumnName": "item_uom_override_id",
                    "KeySequence": 1,
                    "object_id": 1669580986
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom_override",
                    "ForeignKeyName": "FK__item_uom___item___395884C4",
                    "ColumnName": "item_uom_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "item_uom",
                    "ReferencedColumnName": "item_uom_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1669580986
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "location_definition",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1701581100,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "location_definition_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "interior_length",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "interior_width",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "interior_height",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "interior_volume",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "exterior_length",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "exterior_width",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "exterior_height",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "exterior_volume",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "max_weight",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "max_units",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "temperature_control",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "humidity_control",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "ColumnName": "date_updated_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1701581100
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "location_definition",
                    "PrimaryKeyName": "PK__location__69EF37ED2CDB4FBF",
                    "ColumnName": "location_definition_id",
                    "KeySequence": 1,
                    "object_id": 1701581100
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "inventory_count",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1733581214,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "inventory_count_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "inventory_document_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "storage_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "expected_quantity",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "counted_quantity",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "count_status",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "counted_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "validated_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "date_counted_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "date_validated_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ColumnName": "date_updated_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1733581214
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "PrimaryKeyName": "PK__inventor__D6F93C25C7055ECB",
                    "ColumnName": "inventory_count_id",
                    "KeySequence": 1,
                    "object_id": 1733581214
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ForeignKeyName": "FK__inventory__inven__3A4CA8FD",
                    "ColumnName": "inventory_document_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "inventory_document",
                    "ReferencedColumnName": "inventory_document_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ForeignKeyName": "FK__inventory__stora__3C34F16F",
                    "ColumnName": "storage_location_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "storage_location",
                    "ReferencedColumnName": "storage_location_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1733581214
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_count",
                    "ForeignKeyName": "FK__inventory__item___3B40CD36",
                    "ColumnName": "item_uom_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "item_uom",
                    "ReferencedColumnName": "item_uom_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1733581214
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "inventory_document",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1765581328,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ColumnName": "inventory_document_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1765581328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ColumnName": "document_number",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1765581328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ColumnName": "inventory_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1765581328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1765581328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ColumnName": "date_updated_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1765581328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ColumnName": "date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1765581328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ColumnName": "created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1765581328
                },
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ColumnName": "completed_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1765581328
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "PrimaryKeyName": "PK__inventor__8174B5A7F5040FA2",
                    "ColumnName": "inventory_document_id",
                    "KeySequence": 1,
                    "object_id": 1765581328
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "inventory_document",
                    "ForeignKeyName": "FK__inventory__inven__3D2915A8",
                    "ColumnName": "inventory_status_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "inventory_status",
                    "ReferencedColumnName": "inventory_status_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1765581328
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "sub_order_line_task",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1797581442,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "task_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "order_line_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "movement_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "quantity",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "actual_quantity",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "source_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "destination_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "task_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "assigned_to_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "priority",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "validation_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "date_assigned_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "date_started_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ColumnName": "notes",
                    "DataType": "varchar",
                    "max_length": 500,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1797581442
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "PrimaryKeyName": "PK__sub_orde__0492148D48A92352",
                    "ColumnName": "task_id",
                    "KeySequence": 1,
                    "object_id": 1797581442
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ForeignKeyName": "FK__sub_order__valid__41EDCAC5",
                    "ColumnName": "validation_type_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "validation_type",
                    "ReferencedColumnName": "validation_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ForeignKeyName": "FK__sub_order__movem__3F115E1A",
                    "ColumnName": "movement_type_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "movement_type",
                    "ReferencedColumnName": "movement_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ForeignKeyName": "FK__sub_order__task___40F9A68C",
                    "ColumnName": "task_state_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "task_state",
                    "ReferencedColumnName": "task_state_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ForeignKeyName": "FK__sub_order__order__40058253",
                    "ColumnName": "order_line_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "order_line",
                    "ReferencedColumnName": "order_line_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1797581442
                },
                {
                    "SchemaName": "forge",
                    "TableName": "sub_order_line_task",
                    "ForeignKeyName": "FK__sub_order__item___3E1D39E1",
                    "ColumnName": "item_uom_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "item_uom",
                    "ReferencedColumnName": "item_uom_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1797581442
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "order_line",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1829581556,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "order_line_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "requested_quantity",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "fulfilled_quantity",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "fill_method_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "movement_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "source_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "destination_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "line_sequence",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "date_expected_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ColumnName": "date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1829581556
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "PrimaryKeyName": "PK__order_li__8F2B951F6B884617",
                    "ColumnName": "order_line_id",
                    "KeySequence": 1,
                    "object_id": 1829581556
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ForeignKeyName": "FK__order_lin__movem__43D61337",
                    "ColumnName": "movement_type_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "movement_type",
                    "ReferencedColumnName": "movement_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ForeignKeyName": "FK__order_lin__statu__44CA3770",
                    "ColumnName": "status_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "transfer_order_status",
                    "ReferencedColumnName": "transfer_order_status_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ForeignKeyName": "FK__order_lin__trans__45BE5BA9",
                    "ColumnName": "transfer_order_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "transfer_order",
                    "ReferencedColumnName": "transfer_order_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1829581556
                },
                {
                    "SchemaName": "forge",
                    "TableName": "order_line",
                    "ForeignKeyName": "FK__order_lin__item___42E1EEFE",
                    "ColumnName": "item_uom_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "item_uom",
                    "ReferencedColumnName": "item_uom_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1829581556
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "transfer_order",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1861581670,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "order_number",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "transfer_order_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "transfer_order_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "source_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "destination_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "fill_method_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "priority",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "date_expected_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ColumnName": "date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1861581670
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "PrimaryKeyName": "PK__transfer__EA2BC15947B429B1",
                    "ColumnName": "transfer_order_id",
                    "KeySequence": 1,
                    "object_id": 1861581670
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ForeignKeyName": "FK__transfer___fill___46B27FE2",
                    "ColumnName": "fill_method_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "fill_method",
                    "ReferencedColumnName": "fill_method_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ForeignKeyName": "FK__transfer___trans__489AC854",
                    "ColumnName": "transfer_order_status_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "transfer_order_status",
                    "ReferencedColumnName": "transfer_order_status_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1861581670
                },
                {
                    "SchemaName": "forge",
                    "TableName": "transfer_order",
                    "ForeignKeyName": "FK__transfer___trans__47A6A41B",
                    "ColumnName": "transfer_order_type_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "transfer_order_type",
                    "ReferencedColumnName": "transfer_order_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1861581670
                }
            ]
        },
        {
            "SchemaName": "dbo",
            "TableName": "__RefactorLog",
            "ApproximateRowCount": 8,
            "TableType": "Regular Table",
            "object_id": 1874105717,
            "Columns": [
                {
                    "SchemaName": "dbo",
                    "TableName": "__RefactorLog",
                    "ColumnName": "OperationKey",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1874105717
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "dbo",
                    "TableName": "__RefactorLog",
                    "PrimaryKeyName": "PK____Refact__D3AEFFDB3933A077",
                    "ColumnName": "OperationKey",
                    "KeySequence": 1,
                    "object_id": 1874105717
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "location_type_compatibility",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1893581784,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "location_type_compatibility",
                    "ColumnName": "compatibility_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1893581784
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_type_compatibility",
                    "ColumnName": "location_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1893581784
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_type_compatibility",
                    "ColumnName": "compatible_location_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1893581784
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_type_compatibility",
                    "ColumnName": "is_preferred",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1893581784
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "location_type_compatibility",
                    "PrimaryKeyName": "PK__location__AA12AC999E216C38",
                    "ColumnName": "compatibility_id",
                    "KeySequence": 1,
                    "object_id": 1893581784
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "location_type_compatibility",
                    "ForeignKeyName": "FK__location___compa__498EEC8D",
                    "ColumnName": "compatible_location_type_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "storage_location_type",
                    "ReferencedColumnName": "location_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1893581784
                },
                {
                    "SchemaName": "forge",
                    "TableName": "location_type_compatibility",
                    "ForeignKeyName": "FK__location___locat__4A8310C6",
                    "ColumnName": "location_type_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "storage_location_type",
                    "ReferencedColumnName": "location_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1893581784
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "storage_location",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 1925581898,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "storage_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "location_code",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "location_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "parent_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "area",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "zone",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "aisle",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "rack",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "level",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "position",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "storage_location_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "capacity_volume",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "capacity_weight",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ColumnName": "location_definition_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1925581898
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "PrimaryKeyName": "PK__storage___8FD7C294F732FF98",
                    "ColumnName": "storage_location_id",
                    "KeySequence": 1,
                    "object_id": 1925581898
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ForeignKeyName": "FK_storage_location_definition",
                    "ColumnName": "location_definition_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "location_definition",
                    "ReferencedColumnName": "location_definition_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ForeignKeyName": "FK__storage_l__locat__4B7734FF",
                    "ColumnName": "location_type_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "storage_location_type",
                    "ReferencedColumnName": "location_type_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1925581898
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location",
                    "ForeignKeyName": "FK_storage_location_status",
                    "ColumnName": "storage_location_status_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "storage_location_status",
                    "ReferencedColumnName": "storage_location_status_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 1925581898
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "storage_location_type",
            "ApproximateRowCount": 10,
            "TableType": "Regular Table",
            "object_id": 1957582012,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location_type",
                    "ColumnName": "location_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1957582012
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location_type",
                    "ColumnName": "location_type_code",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 1957582012
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location_type",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 1957582012
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location_type",
                    "PrimaryKeyName": "PK__storage___535FD89A96BB72B7",
                    "ColumnName": "location_type_id",
                    "KeySequence": 1,
                    "object_id": 1957582012
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "item_uom",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 2005582183,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "item_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "uom_code",
                    "DataType": "varchar",
                    "max_length": 20,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "item_code",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "conversion_factor",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "required_location_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "default_weight",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "default_height",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "default_width",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "default_length",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2005582183
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ColumnName": "is_primary",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "DefaultValue": "((0))",
                    "object_id": 2005582183
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "PrimaryKeyName": "PK__item_uom__6BF09359A2D8D6E6",
                    "ColumnName": "item_uom_id",
                    "KeySequence": 1,
                    "object_id": 2005582183
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "item_uom",
                    "ForeignKeyName": "FK__item_uom__item_i__4E53A1AA",
                    "ColumnName": "item_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "item",
                    "ReferencedColumnName": "item_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 2005582183
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "item",
            "ApproximateRowCount": 0,
            "TableType": "Regular Table",
            "object_id": 2053582354,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "item",
                    "ColumnName": "item_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2053582354
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item",
                    "ColumnName": "item_number",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2053582354
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2053582354
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item",
                    "ColumnName": "item_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2053582354
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "item",
                    "PrimaryKeyName": "PK__item__52020FDD5F748D0D",
                    "ColumnName": "item_id",
                    "KeySequence": 1,
                    "object_id": 2053582354
                }
            ],
            "ForeignKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "item",
                    "ForeignKeyName": "FK__item__item_statu__4F47C5E3",
                    "ColumnName": "item_status_id",
                    "ReferencedSchemaName": "forge",
                    "ReferencedTableName": "item_status",
                    "ReferencedColumnName": "item_status_id",
                    "OnDelete": "NO_ACTION",
                    "OnUpdate": "NO_ACTION",
                    "object_id": 2053582354
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "storage_location_status",
            "ApproximateRowCount": 3,
            "TableType": "Regular Table",
            "object_id": 2085582468,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location_status",
                    "ColumnName": "storage_location_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2085582468
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location_status",
                    "ColumnName": "storage_location_status_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2085582468
                },
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location_status",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2085582468
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "storage_location_status",
                    "PrimaryKeyName": "PK__storage___3B37107A14EDB1CD",
                    "ColumnName": "storage_location_status_id",
                    "KeySequence": 1,
                    "object_id": 2085582468
                }
            ]
        },
        {
            "SchemaName": "forge",
            "TableName": "item_status",
            "ApproximateRowCount": 4,
            "TableType": "Regular Table",
            "object_id": 2133582639,
            "Columns": [
                {
                    "SchemaName": "forge",
                    "TableName": "item_status",
                    "ColumnName": "item_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2133582639
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_status",
                    "ColumnName": "item_status_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": false,
                    "is_identity": false,
                    "object_id": 2133582639
                },
                {
                    "SchemaName": "forge",
                    "TableName": "item_status",
                    "ColumnName": "description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_nullable": true,
                    "is_identity": false,
                    "object_id": 2133582639
                }
            ],
            "PrimaryKeys": [
                {
                    "SchemaName": "forge",
                    "TableName": "item_status",
                    "PrimaryKeyName": "PK__item_sta__280DB53D8979AE00",
                    "ColumnName": "item_status_id",
                    "KeySequence": 1,
                    "object_id": 2133582639
                }
            ]
        }
    ],
    "StoredProcedures": [
        {
            "SchemaName": "core",
            "ProcedureName": "sp_log_transaction",
            "create_date": "2025-06-29T15:24:18.193",
            "modify_date": "2025-06-29T15:24:18.193",
            "ProcedureDefinition": "CREATE PROCEDURE core.sp_log_transaction\r\n    @p_logging_id UNIQUEIDENTIFIER,\r\n    @p_source_system VARCHAR(50),\r\n    @p_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_object_name VARCHAR(100),\r\n    @p_object_id UNIQUEIDENTIFIER = NULL,\r\n    @p_action_type_id INT,\r\n    @p_status_code_id INT,\r\n    @p_data_before NVARCHAR(MAX) = NULL,\r\n    @p_data_after NVARCHAR(MAX) = NULL,\r\n    @p_diff_data NVARCHAR(MAX) = NULL,\r\n    @p_message NVARCHAR(1000) = NULL,\r\n    @p_context_id UNIQUEIDENTIFIER = NULL,\r\n\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT,\r\n    @p_logging_id_out UNIQUEIDENTIFIER OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        -- Default return values\r\n        SET @p_return_result_ok = 1;\r\n        SET @p_return_result_message = N'Transaction log inserted successfully.';\r\n        \r\n        IF @p_logging_id IS NULL\r\n            SET @p_logging_id = NEWID();\r\n\r\n        -- Set the output logging_id\r\n        SET @p_logging_id_out = @p_logging_id;\r\n\r\n        -- Insert the log entry\r\n        INSERT INTO core.transaction_log (\r\n            logging_id,\r\n            source_system,\r\n            user_id,\r\n            event_timestamp,\r\n            object_name,\r\n            object_id,\r\n            action_type_id,\r\n            status_code_id,\r\n            data_before,\r\n            data_after,\r\n            diff_data,\r\n            message,\r\n            context_id,\r\n            created_utc\r\n        )\r\n        VALUES (\r\n            @p_logging_id,\r\n            @p_source_system,\r\n            @p_user_id,\r\n            GETUTCDATE(),\r\n            @p_object_name,\r\n            @p_object_id,\r\n            @p_action_type_id,\r\n            @p_status_code_id,\r\n            @p_data_before,\r\n            @p_data_after,\r\n            @p_diff_data,\r\n            @p_message,\r\n            @p_context_id,\r\n            GETUTCDATE()\r\n        );\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @err_number INT = ERROR_NUMBER();\r\n        DECLARE @err_severity INT = ERROR_SEVERITY();\r\n        DECLARE @err_state INT = ERROR_STATE();\r\n        DECLARE @err_line INT = ERROR_LINE();\r\n        DECLARE @err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @err_message, ' (Line ', @err_line, \r\n            ', Procedure: ', ISNULL(@err_procedure, 'N\/A'), \r\n            ', State: ', @err_state, ', Severity: ', @err_severity, ')'\r\n        );\r\n        SET @p_logging_id_out = NULL;\r\n\r\n        -- Attempt to log the failure of this procedure itself\r\n        BEGIN TRY\r\n            INSERT INTO core.transaction_log (\r\n                logging_id,\r\n                source_system,\r\n                user_id,\r\n                event_timestamp,\r\n                object_name,\r\n                object_id,\r\n                action_type_id,\r\n                status_code_id,\r\n                data_before,\r\n                data_after,\r\n                diff_data,\r\n                message,\r\n                context_id,\r\n                created_utc\r\n            )\r\n            VALUES (\r\n                NEWID(), -- New logging_id for error entry\r\n                'CORE',\r\n                @p_user_id,\r\n                GETUTCDATE(),\r\n                'sp_log_transaction',\r\n                NULL,\r\n                5, -- Assuming 'VALIDATE' or 'SYSTEM_ERROR' action_type_id\r\n                2, -- FAILED\r\n                NULL,\r\n                NULL,\r\n                NULL,\r\n                @p_return_result_message,\r\n                @p_context_id,\r\n                GETUTCDATE()\r\n            );\r\n        END TRY\r\n        BEGIN CATCH\r\n            -- If even the internal log fails, suppress it to avoid infinite loop\r\n        END CATCH\r\n\r\n        RETURN;\r\n    END CATCH\r\nEND;",
            "object_id": 1538104520,
            "Parameters": [
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 1,
                    "ParameterName": "@p_logging_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 2,
                    "ParameterName": "@p_source_system",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 3,
                    "ParameterName": "@p_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 4,
                    "ParameterName": "@p_object_name",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 5,
                    "ParameterName": "@p_object_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 6,
                    "ParameterName": "@p_action_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 7,
                    "ParameterName": "@p_status_code_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 8,
                    "ParameterName": "@p_data_before",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 9,
                    "ParameterName": "@p_data_after",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 10,
                    "ParameterName": "@p_diff_data",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 11,
                    "ParameterName": "@p_message",
                    "DataType": "nvarchar",
                    "max_length": 2000,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 12,
                    "ParameterName": "@p_context_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 13,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 14,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1538104520
                },
                {
                    "SchemaName": "core",
                    "ProcedureName": "sp_log_transaction",
                    "parameter_id": 15,
                    "ParameterName": "@p_logging_id_out",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1538104520
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_batch_state",
            "create_date": "2025-06-29T15:24:18.200",
            "modify_date": "2025-06-29T15:24:18.200",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_batch_state\r\n  PK: batch_state_id (INT)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_batch_state\r\n(\r\n    @p_record_id INT = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table columns\r\n    @p_batch_state_name VARCHAR(50),\r\n    @p_description VARCHAR(255) = NULL,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS (SELECT 1 FROM forge.batch_state WHERE batch_state_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    batch_state_id,\r\n                    batch_state_name,\r\n                    description\r\n                FROM forge.batch_state \r\n                WHERE batch_state_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.batch_state\r\n            WHERE batch_state_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'batch_state',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from batch_state',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    batch_state_id,\r\n                    batch_state_name,\r\n                    description\r\n                FROM forge.batch_state \r\n                WHERE batch_state_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.batch_state\r\n            SET\r\n                batch_state_name = @p_batch_state_name,\r\n                description = @p_description\r\n            WHERE batch_state_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    batch_state_id,\r\n                    batch_state_name,\r\n                    description\r\n                FROM forge.batch_state \r\n                WHERE batch_state_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'batch_state_name' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].batch_state_name') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].batch_state_name') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].batch_state_name') <> JSON_VALUE(@l_data_after, '$[0].batch_state_name')\r\n                UNION ALL\r\n                SELECT \r\n                    'description' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].description') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].description') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].description') <> JSON_VALUE(@l_data_after, '$[0].description')\r\n            )\r\n            SELECT @l_diff_data = (SELECT * FROM DiffData FOR JSON PATH);\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_state',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated batch_state',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n            BEGIN\r\n                -- Get the next available ID\r\n                SELECT @p_record_id = ISNULL(MAX(batch_state_id), 0) + 1\r\n                FROM forge.batch_state;\r\n            END\r\n\r\n            INSERT INTO forge.batch_state\r\n            (\r\n                batch_state_id,\r\n                batch_state_name,\r\n                description\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_batch_state_name,\r\n                @p_description\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    batch_state_id,\r\n                    batch_state_name,\r\n                    description\r\n                FROM forge.batch_state \r\n                WHERE batch_state_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_state',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into batch_state',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        -- Decide action type based on what we were attempting\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3   -- was trying to delete\r\n            WHEN @l_exists = 1 THEN 2      -- was trying to update\r\n            ELSE 1                         -- was trying to insert\r\n        END;\r\n\r\n        -- Attempt to log the fail\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_state',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,  -- FAILED\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n            -- Suppress nested logging failure to avoid recursion\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1554104577,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_state",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1554104577
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_state",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1554104577
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_state",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1554104577
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_state",
                    "parameter_id": 4,
                    "ParameterName": "@p_batch_state_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1554104577
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_state",
                    "parameter_id": 5,
                    "ParameterName": "@p_description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1554104577
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_state",
                    "parameter_id": 6,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1554104577
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_state",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1554104577
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_batch_type",
            "create_date": "2025-06-29T15:24:18.200",
            "modify_date": "2025-06-29T15:24:18.200",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_batch_type\r\n  PK: batch_type_id (INT)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_batch_type\r\n(\r\n    @p_record_id INT = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_type_code VARCHAR(50),\r\n    @p_description VARCHAR(255),\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.batch_type WHERE batch_type_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    batch_type_id,\r\n                    batch_type_name,\r\n                    description\r\n                FROM forge.batch_type \r\n                WHERE batch_type_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.batch_type\r\n            WHERE batch_type_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'batch_type',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from batch_type',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    batch_type_id,\r\n                    batch_type_name,\r\n                    description\r\n                FROM forge.batch_type \r\n                WHERE batch_type_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.batch_type\r\n            SET\r\n                batch_type_name = @p_type_code,\r\n                description = @p_description\r\n            WHERE batch_type_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    batch_type_id,\r\n                    batch_type_name,\r\n                    description\r\n                FROM forge.batch_type \r\n                WHERE batch_type_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'batch_type_name' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].batch_type_name') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].batch_type_name') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].batch_type_name') <> JSON_VALUE(@l_data_after, '$[0].batch_type_name')\r\n                UNION ALL\r\n                SELECT \r\n                    'description' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].description') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].description') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].description') <> JSON_VALUE(@l_data_after, '$[0].description')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_type',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated batch_type',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = (SELECT ISNULL(MAX(batch_type_id), 0) + 1 FROM forge.batch_type);\r\n\r\n            INSERT INTO forge.batch_type\r\n            (\r\n                batch_type_id,\r\n                batch_type_name,\r\n                description\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_type_code,\r\n                @p_description\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    batch_type_id,\r\n                    batch_type_name,\r\n                    description\r\n                FROM forge.batch_type \r\n                WHERE batch_type_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_type',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into batch_type',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE WHEN @p_is_delete = 1 THEN 3 ELSE 1 END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_type',\r\n                @p_object_id = NULL,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1570104634,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_type",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1570104634
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_type",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1570104634
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_type",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1570104634
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_type",
                    "parameter_id": 4,
                    "ParameterName": "@p_type_code",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1570104634
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_type",
                    "parameter_id": 5,
                    "ParameterName": "@p_description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1570104634
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_type",
                    "parameter_id": 6,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1570104634
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_type",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1570104634
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_batch",
            "create_date": "2025-06-29T15:24:18.203",
            "modify_date": "2025-06-29T15:24:18.203",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_batch\r\n  PK: batch_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_batch\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table columns\r\n    @p_batch_name VARCHAR(100),\r\n    @p_batch_type_id INT,\r\n    @p_batch_state_id INT,                -- Changed from UNIQUEIDENTIFIER to INT to match batch_state table\r\n    @p_date_started_utc DATETIME = NULL,\r\n    @p_date_completed_utc DATETIME = NULL,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS (SELECT 1 FROM forge.batch WHERE batch_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    batch_id,\r\n                    batch_name,\r\n                    batch_type_id,\r\n                    batch_state_id,\r\n                    date_created_utc,\r\n                    date_started_utc,\r\n                    date_completed_utc\r\n                FROM forge.batch \r\n                WHERE batch_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.batch\r\n            WHERE batch_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'batch',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from batch',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    batch_id,\r\n                    batch_name,\r\n                    batch_type_id,\r\n                    batch_state_id,\r\n                    date_created_utc,\r\n                    date_started_utc,\r\n                    date_completed_utc\r\n                FROM forge.batch \r\n                WHERE batch_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.batch\r\n            SET\r\n                batch_name = @p_batch_name,\r\n                batch_type_id = @p_batch_type_id,\r\n                batch_state_id = @p_batch_state_id,\r\n                date_started_utc = @p_date_started_utc,\r\n                date_completed_utc = @p_date_completed_utc\r\n            WHERE batch_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    batch_id,\r\n                    batch_name,\r\n                    batch_type_id,\r\n                    batch_state_id,\r\n                    date_created_utc,\r\n                    date_started_utc,\r\n                    date_completed_utc\r\n                FROM forge.batch \r\n                WHERE batch_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'batch_name' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].batch_name') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].batch_name') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].batch_name') <> JSON_VALUE(@l_data_after, '$[0].batch_name')\r\n                UNION ALL\r\n                SELECT \r\n                    'batch_type_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].batch_type_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].batch_type_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].batch_type_id') <> JSON_VALUE(@l_data_after, '$[0].batch_type_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'state_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].state_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].state_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].state_id') <> JSON_VALUE(@l_data_after, '$[0].state_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'date_started_utc' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].date_started_utc') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].date_started_utc') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].date_started_utc') <> JSON_VALUE(@l_data_after, '$[0].date_started_utc')\r\n                UNION ALL\r\n                SELECT \r\n                    'date_completed_utc' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].date_completed_utc') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].date_completed_utc') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].date_completed_utc') <> JSON_VALUE(@l_data_after, '$[0].date_completed_utc')\r\n            )\r\n            SELECT @l_diff_data = (SELECT * FROM DiffData FOR JSON PATH);\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated batch',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.batch\r\n            (\r\n                batch_id,\r\n                batch_name,\r\n                batch_type_id,\r\n                batch_state_id,\r\n                date_started_utc,\r\n                date_completed_utc\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_batch_name,\r\n                @p_batch_type_id,\r\n                @p_batch_state_id,\r\n                @p_date_started_utc,\r\n                @p_date_completed_utc\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    batch_id,\r\n                    batch_name,\r\n                    batch_type_id,\r\n                    batch_state_id,\r\n                    date_created_utc,\r\n                    date_started_utc,\r\n                    date_completed_utc\r\n                FROM forge.batch \r\n                WHERE batch_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into batch',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        -- Decide action type based on what we were attempting\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3   -- was trying to delete\r\n            WHEN @l_exists = 1 THEN 2      -- was trying to update\r\n            ELSE 1                         -- was trying to insert\r\n        END;\r\n\r\n        -- Attempt to log the fail\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,  -- FAILED\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n            -- Suppress nested logging failure to avoid recursion\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1586104691,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 4,
                    "ParameterName": "@p_batch_name",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 5,
                    "ParameterName": "@p_batch_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 6,
                    "ParameterName": "@p_batch_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 7,
                    "ParameterName": "@p_date_started_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 8,
                    "ParameterName": "@p_date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 9,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1586104691
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch",
                    "parameter_id": 10,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1586104691
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_fill_method",
            "create_date": "2025-06-29T15:24:18.207",
            "modify_date": "2025-06-29T15:24:18.207",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_fill_method\r\n  PK: fill_method_id (INT)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_fill_method\r\n(\r\n    @p_record_id INT = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_fill_method_name VARCHAR(50),\r\n    @p_description VARCHAR(255),\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.fill_method WHERE fill_method_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    fill_method_id,\r\n                    fill_method_name,\r\n                    description\r\n                FROM forge.fill_method \r\n                WHERE fill_method_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.fill_method\r\n            WHERE fill_method_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'fill_method',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from fill_method',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    fill_method_id,\r\n                    fill_method_name,\r\n                    description\r\n                FROM forge.fill_method \r\n                WHERE fill_method_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.fill_method\r\n            SET\r\n                fill_method_name = @p_fill_method_name,\r\n                description = @p_description\r\n            WHERE fill_method_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    fill_method_id,\r\n                    fill_method_name,\r\n                    description\r\n                FROM forge.fill_method \r\n                WHERE fill_method_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'fill_method_name' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].fill_method_name') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].fill_method_name') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].fill_method_name') <> JSON_VALUE(@l_data_after, '$[0].fill_method_name')\r\n                UNION ALL\r\n                SELECT \r\n                    'description' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].description') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].description') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].description') <> JSON_VALUE(@l_data_after, '$[0].description')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fill_method',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated fill_method',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = (SELECT ISNULL(MAX(fill_method_id), 0) + 1 FROM forge.fill_method);\r\n\r\n            INSERT INTO forge.fill_method\r\n            (\r\n                fill_method_id,\r\n                fill_method_name,\r\n                description\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_fill_method_name,\r\n                @p_description\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    fill_method_id,\r\n                    fill_method_name,\r\n                    description\r\n                FROM forge.fill_method \r\n                WHERE fill_method_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fill_method',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into fill_method',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE WHEN @p_is_delete = 1 THEN 3 ELSE 1 END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fill_method',\r\n                @p_object_id = NULL,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1602104748,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fill_method",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1602104748
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fill_method",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1602104748
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fill_method",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1602104748
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fill_method",
                    "parameter_id": 4,
                    "ParameterName": "@p_fill_method_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1602104748
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fill_method",
                    "parameter_id": 5,
                    "ParameterName": "@p_description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1602104748
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fill_method",
                    "parameter_id": 6,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1602104748
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fill_method",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1602104748
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_batch_transfer_order",
            "create_date": "2025-06-29T15:24:18.210",
            "modify_date": "2025-06-29T15:24:18.210",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_batch_transfer_order\r\n  Composite PK: (batch_id, transfer_order_id)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_batch_transfer_order\r\n(\r\n    @p_batch_id UNIQUEIDENTIFIER,\r\n    @p_transfer_order_id UNIQUEIDENTIFIER,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF EXISTS (\r\n        SELECT 1 FROM forge.batch_transfer_order\r\n        WHERE batch_id = @p_batch_id AND transfer_order_id = @p_transfer_order_id\r\n    )\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n        IF @p_is_delete = 1 AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    batch_id,\r\n                    transfer_order_id\r\n                FROM forge.batch_transfer_order \r\n                WHERE batch_id = @p_batch_id AND transfer_order_id = @p_transfer_order_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.batch_transfer_order\r\n            WHERE batch_id = @p_batch_id AND transfer_order_id = @p_transfer_order_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'batch_transfer_order',\r\n                    @p_object_id = NULL,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from batch_transfer_order',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    batch_id,\r\n                    transfer_order_id\r\n                FROM forge.batch_transfer_order \r\n                WHERE batch_id = @p_batch_id AND transfer_order_id = @p_transfer_order_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.batch_transfer_order\r\n            SET\r\n                batch_id = @p_batch_id,\r\n                transfer_order_id = @p_transfer_order_id\r\n            WHERE batch_id = @p_batch_id AND transfer_order_id = @p_transfer_order_id;\r\n\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    batch_id,\r\n                    transfer_order_id\r\n                FROM forge.batch_transfer_order \r\n                WHERE batch_id = @p_batch_id AND transfer_order_id = @p_transfer_order_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'batch_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].batch_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].batch_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].batch_id') <> JSON_VALUE(@l_data_after, '$[0].batch_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'transfer_order_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].transfer_order_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].transfer_order_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].transfer_order_id') <> JSON_VALUE(@l_data_after, '$[0].transfer_order_id')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_transfer_order',\r\n                @p_object_id = NULL,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated batch_transfer_order',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n        ELSE IF @l_exists = 0\r\n        BEGIN\r\n            INSERT INTO forge.batch_transfer_order (\r\n                batch_id,\r\n                transfer_order_id\r\n            )\r\n            VALUES (\r\n                @p_batch_id,\r\n                @p_transfer_order_id\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_transfer_order',\r\n                @p_object_id = NULL,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into batch_transfer_order',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE WHEN @p_is_delete = 1 THEN 3 ELSE 1 END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'batch_transfer_order',\r\n                @p_object_id = NULL,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1618104805,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_transfer_order",
                    "parameter_id": 1,
                    "ParameterName": "@p_batch_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1618104805
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_transfer_order",
                    "parameter_id": 2,
                    "ParameterName": "@p_transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1618104805
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_transfer_order",
                    "parameter_id": 3,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1618104805
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_transfer_order",
                    "parameter_id": 4,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1618104805
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_transfer_order",
                    "parameter_id": 5,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1618104805
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_batch_transfer_order",
                    "parameter_id": 6,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1618104805
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_fulfillment_assignment",
            "create_date": "2025-06-29T15:24:18.210",
            "modify_date": "2025-06-29T15:24:18.210",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_fulfillment_assignment\r\n  PK: assignment_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_fulfillment_assignment\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_transfer_order_id UNIQUEIDENTIFIER,\r\n    @p_order_line_id UNIQUEIDENTIFIER,\r\n    @p_fulfillment_method_id INT,\r\n    @p_precedence_order INT,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.fulfillment_assignment WHERE fulfillment_assignment_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    fulfillment_assignment_id,\r\n                    transfer_order_id,\r\n                    order_line_id,\r\n                    fulfillment_method_id,\r\n                    precedence_order\r\n                FROM forge.fulfillment_assignment \r\n                WHERE fulfillment_assignment_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.fulfillment_assignment\r\n            WHERE fulfillment_assignment_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_transaction_log_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'fulfillment_assignment',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from fulfillment_assignment',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    fulfillment_assignment_id,\r\n                    transfer_order_id,\r\n                    order_line_id,\r\n                    fulfillment_method_id,\r\n                    precedence_order\r\n                FROM forge.fulfillment_assignment \r\n                WHERE fulfillment_assignment_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.fulfillment_assignment\r\n            SET\r\n                transfer_order_id = @p_transfer_order_id,\r\n                order_line_id = @p_order_line_id,\r\n                fulfillment_method_id = @p_fulfillment_method_id,\r\n                precedence_order = @p_precedence_order\r\n            WHERE fulfillment_assignment_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    fulfillment_assignment_id,\r\n                    transfer_order_id,\r\n                    order_line_id,\r\n                    fulfillment_method_id,\r\n                    precedence_order\r\n                FROM forge.fulfillment_assignment \r\n                WHERE fulfillment_assignment_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'transfer_order_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].transfer_order_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].transfer_order_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].transfer_order_id') <> JSON_VALUE(@l_data_after, '$[0].transfer_order_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'order_line_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].order_line_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].order_line_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].order_line_id') <> JSON_VALUE(@l_data_after, '$[0].order_line_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'fulfillment_method_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].fulfillment_method_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].fulfillment_method_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].fulfillment_method_id') <> JSON_VALUE(@l_data_after, '$[0].fulfillment_method_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'precedence_order' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].precedence_order') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].precedence_order') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].precedence_order') <> JSON_VALUE(@l_data_after, '$[0].precedence_order')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_transaction_log_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fulfillment_assignment',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated fulfillment_assignment',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.fulfillment_assignment\r\n            (\r\n                fulfillment_assignment_id,\r\n                transfer_order_id,\r\n                order_line_id,\r\n                fulfillment_method_id,\r\n                precedence_order\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_transfer_order_id,\r\n                @p_order_line_id,\r\n                @p_fulfillment_method_id,\r\n                @p_precedence_order\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    fulfillment_assignment_id,\r\n                    transfer_order_id,\r\n                    order_line_id,\r\n                    fulfillment_method_id,\r\n                    precedence_order\r\n                FROM forge.fulfillment_assignment \r\n                WHERE fulfillment_assignment_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_transaction_log_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fulfillment_assignment',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into fulfillment_assignment',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_transaction_log_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fulfillment_assignment',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1634104862,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1634104862
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1634104862
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1634104862
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 4,
                    "ParameterName": "@p_transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1634104862
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 5,
                    "ParameterName": "@p_order_line_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1634104862
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 6,
                    "ParameterName": "@p_fulfillment_method_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1634104862
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 7,
                    "ParameterName": "@p_precedence_order",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1634104862
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 8,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1634104862
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_assignment",
                    "parameter_id": 9,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1634104862
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_fulfillment_method",
            "create_date": "2025-06-29T15:24:18.213",
            "modify_date": "2025-06-29T15:24:18.213",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_fulfillment_method\r\n  PK: fulfillment_method_id (INT)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_fulfillment_method\r\n(\r\n    @p_record_id INT = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_method_name VARCHAR(50),\r\n    @p_description VARCHAR(255),\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.fulfillment_method WHERE fulfillment_method_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    fulfillment_method_id,\r\n                    method_name,\r\n                    description\r\n                FROM forge.fulfillment_method \r\n                WHERE fulfillment_method_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.fulfillment_method\r\n            WHERE fulfillment_method_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_transaction_log_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'fulfillment_method',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from fulfillment_method',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    fulfillment_method_id,\r\n                    method_name,\r\n                    description\r\n                FROM forge.fulfillment_method \r\n                WHERE fulfillment_method_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.fulfillment_method\r\n            SET\r\n                method_name = @p_method_name,\r\n                description = @p_description\r\n            WHERE fulfillment_method_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    fulfillment_method_id,\r\n                    method_name,\r\n                    description\r\n                FROM forge.fulfillment_method \r\n                WHERE fulfillment_method_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'method_name' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].method_name') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].method_name') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].method_name') <> JSON_VALUE(@l_data_after, '$[0].method_name')\r\n                UNION ALL\r\n                SELECT \r\n                    'description' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].description') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].description') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].description') <> JSON_VALUE(@l_data_after, '$[0].description')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_transaction_log_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fulfillment_method',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated fulfillment_method',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = (SELECT ISNULL(MAX(fulfillment_method_id), 0) + 1 FROM forge.fulfillment_method);\r\n\r\n            INSERT INTO forge.fulfillment_method\r\n            (\r\n                fulfillment_method_id,\r\n                method_name,\r\n                description\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_method_name,\r\n                @p_description\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    fulfillment_method_id,\r\n                    method_name,\r\n                    description\r\n                FROM forge.fulfillment_method \r\n                WHERE fulfillment_method_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_transaction_log_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fulfillment_method',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into fulfillment_method',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE WHEN @p_is_delete = 1 THEN 3 ELSE 1 END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_transaction_log_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'fulfillment_method',\r\n                @p_object_id = NULL,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1650104919,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_method",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1650104919
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_method",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1650104919
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_method",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1650104919
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_method",
                    "parameter_id": 4,
                    "ParameterName": "@p_method_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1650104919
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_method",
                    "parameter_id": 5,
                    "ParameterName": "@p_description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1650104919
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_method",
                    "parameter_id": 6,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1650104919
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_fulfillment_method",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1650104919
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_inventory_count",
            "create_date": "2025-06-29T15:24:18.217",
            "modify_date": "2025-06-29T15:24:18.217",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_inventory_count\r\n  PK: inventory_count_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_inventory_count\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_inventory_document_id UNIQUEIDENTIFIER,\r\n    @p_storage_location_id UNIQUEIDENTIFIER,\r\n    @p_item_uom_id UNIQUEIDENTIFIER,\r\n    @p_expected_quantity INT,\r\n    @p_counted_quantity INT,\r\n    @p_count_status VARCHAR(50),\r\n    @p_counted_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_validated_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_date_counted_utc DATETIME = NULL,\r\n    @p_date_validated_utc DATETIME = NULL,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.inventory_count WHERE inventory_count_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    inventory_count_id,\r\n                    inventory_document_id,\r\n                    storage_location_id,\r\n                    item_uom_id,\r\n                    expected_quantity,\r\n                    counted_quantity,\r\n                    count_status,\r\n                    counted_by_user_id,\r\n                    validated_by_user_id,\r\n                    date_counted_utc,\r\n                    date_validated_utc,\r\n                    date_created_utc,\r\n                    date_updated_utc\r\n                FROM forge.inventory_count \r\n                WHERE inventory_count_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.inventory_count\r\n            WHERE inventory_count_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'inventory_count',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from inventory_count',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    inventory_count_id,\r\n                    inventory_document_id,\r\n                    storage_location_id,\r\n                    item_uom_id,\r\n                    expected_quantity,\r\n                    counted_quantity,\r\n                    count_status,\r\n                    counted_by_user_id,\r\n                    validated_by_user_id,\r\n                    date_counted_utc,\r\n                    date_validated_utc,\r\n                    date_created_utc,\r\n                    date_updated_utc\r\n                FROM forge.inventory_count \r\n                WHERE inventory_count_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.inventory_count\r\n            SET\r\n                inventory_document_id = @p_inventory_document_id,\r\n                storage_location_id = @p_storage_location_id,\r\n                item_uom_id = @p_item_uom_id,\r\n                expected_quantity = @p_expected_quantity,\r\n                counted_quantity = @p_counted_quantity,\r\n                count_status = @p_count_status,\r\n                counted_by_user_id = @p_counted_by_user_id,\r\n                validated_by_user_id = @p_validated_by_user_id,\r\n                date_counted_utc = @p_date_counted_utc,\r\n                date_validated_utc = @p_date_validated_utc,\r\n                date_updated_utc = GETUTCDATE()\r\n            WHERE inventory_count_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    inventory_count_id,\r\n                    inventory_document_id,\r\n                    storage_location_id,\r\n                    item_uom_id,\r\n                    expected_quantity,\r\n                    counted_quantity,\r\n                    count_status,\r\n                    counted_by_user_id,\r\n                    validated_by_user_id,\r\n                    date_counted_utc,\r\n                    date_validated_utc,\r\n                    date_created_utc,\r\n                    date_updated_utc\r\n                FROM forge.inventory_count \r\n                WHERE inventory_count_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'inventory_document_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].inventory_document_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].inventory_document_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].inventory_document_id') <> JSON_VALUE(@l_data_after, '$[0].inventory_document_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'storage_location_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].storage_location_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].storage_location_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].storage_location_id') <> JSON_VALUE(@l_data_after, '$[0].storage_location_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'item_uom_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].item_uom_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].item_uom_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].item_uom_id') <> JSON_VALUE(@l_data_after, '$[0].item_uom_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'expected_quantity' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].expected_quantity') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].expected_quantity') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].expected_quantity') <> JSON_VALUE(@l_data_after, '$[0].expected_quantity')\r\n                UNION ALL\r\n                SELECT \r\n                    'counted_quantity' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].counted_quantity') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].counted_quantity') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].counted_quantity') <> JSON_VALUE(@l_data_after, '$[0].counted_quantity')\r\n                UNION ALL\r\n                SELECT \r\n                    'count_status' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].count_status') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].count_status') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].count_status') <> JSON_VALUE(@l_data_after, '$[0].count_status')\r\n                UNION ALL\r\n                SELECT \r\n                    'counted_by_user_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].counted_by_user_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].counted_by_user_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].counted_by_user_id') <> JSON_VALUE(@l_data_after, '$[0].counted_by_user_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'validated_by_user_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].validated_by_user_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].validated_by_user_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].validated_by_user_id') <> JSON_VALUE(@l_data_after, '$[0].validated_by_user_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'date_counted_utc' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].date_counted_utc') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].date_counted_utc') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].date_counted_utc') <> JSON_VALUE(@l_data_after, '$[0].date_counted_utc')\r\n                UNION ALL\r\n                SELECT \r\n                    'date_validated_utc' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].date_validated_utc') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].date_validated_utc') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].date_validated_utc') <> JSON_VALUE(@l_data_after, '$[0].date_validated_utc')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'inventory_count',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated inventory_count',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.inventory_count\r\n            (\r\n                inventory_count_id,\r\n                inventory_document_id,\r\n                storage_location_id,\r\n                item_uom_id,\r\n                expected_quantity,\r\n                counted_quantity,\r\n                count_status,\r\n                counted_by_user_id,\r\n                validated_by_user_id,\r\n                date_counted_utc,\r\n                date_validated_utc\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_inventory_document_id,\r\n                @p_storage_location_id,\r\n                @p_item_uom_id,\r\n                @p_expected_quantity,\r\n                @p_counted_quantity,\r\n                @p_count_status,\r\n                @p_counted_by_user_id,\r\n                @p_validated_by_user_id,\r\n                @p_date_counted_utc,\r\n                @p_date_validated_utc\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    inventory_count_id,\r\n                    inventory_document_id,\r\n                    storage_location_id,\r\n                    item_uom_id,\r\n                    expected_quantity,\r\n                    counted_quantity,\r\n                    count_status,\r\n                    counted_by_user_id,\r\n                    validated_by_user_id,\r\n                    date_counted_utc,\r\n                    date_validated_utc,\r\n                    date_created_utc,\r\n                    date_updated_utc\r\n                FROM forge.inventory_count \r\n                WHERE inventory_count_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'inventory_count',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into inventory_count',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'inventory_count',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1666104976,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 4,
                    "ParameterName": "@p_inventory_document_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 5,
                    "ParameterName": "@p_storage_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 6,
                    "ParameterName": "@p_item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 7,
                    "ParameterName": "@p_expected_quantity",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 8,
                    "ParameterName": "@p_counted_quantity",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 9,
                    "ParameterName": "@p_count_status",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 10,
                    "ParameterName": "@p_counted_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 11,
                    "ParameterName": "@p_validated_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 12,
                    "ParameterName": "@p_date_counted_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 13,
                    "ParameterName": "@p_date_validated_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 14,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1666104976
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_count",
                    "parameter_id": 15,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1666104976
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_inventory_document",
            "create_date": "2025-06-29T15:24:18.220",
            "modify_date": "2025-06-29T15:24:18.220",
            "ProcedureDefinition": "CREATE PROCEDURE forge.sp_upsert_inventory_document\r\n(\r\n    -- Procedure-level control\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,      -- PK for inventory_document\r\n    @p_caller_user_id UNIQUEIDENTIFIER = NULL, -- The user executing this procedure\r\n    @p_is_delete BIT = 0,                     -- Add\/Update if 0, Delete if 1\r\n\r\n    -- Table columns\r\n    @p_document_number VARCHAR(100),\r\n    @p_inventory_status_id INT,\r\n    @p_date_created_utc DATETIME = NULL,\r\n    @p_date_updated_utc DATETIME = NULL,\r\n    @p_date_completed_utc DATETIME = NULL,\r\n\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,   -- Column: who originally created doc\r\n    @p_completed_by_user_id UNIQUEIDENTIFIER = NULL, -- Column: who completed doc\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no caller user ID is provided\r\n    IF @p_caller_user_id IS NULL\r\n        SET @p_caller_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    \/***************************************************************************\r\n     * Local variable declarations\r\n     **************************************************************************\/\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();  -- For logging\r\n    DECLARE @l_exists BIT = 0;                     -- If record found\r\n    DECLARE @l_action_type_id INT;                 -- 1=Create, 2=Update, 3=Delete\r\n    DECLARE @l_data_before NVARCHAR(MAX);             -- For capturing data before deletion\r\n    DECLARE @l_data_after NVARCHAR(MAX);              -- For capturing data after update or insert\r\n    DECLARE @l_diff_data NVARCHAR(MAX);               -- For capturing diff data\r\n\r\n    \/***************************************************************************\r\n     * Existence check\r\n     **************************************************************************\/\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS (SELECT 1 FROM forge.inventory_document WHERE inventory_document_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n        \/***************************************************************************\r\n         * Delete logic\r\n         **************************************************************************\/\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    inventory_document_id,\r\n                    document_number,\r\n                    inventory_status_id,\r\n                    date_created_utc,\r\n                    date_updated_utc,\r\n                    date_completed_utc,\r\n                    created_by_user_id,\r\n                    completed_by_user_id\r\n                FROM forge.inventory_document \r\n                WHERE inventory_document_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.inventory_document\r\n            WHERE inventory_document_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'inventory_document',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from inventory_document',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        \/***************************************************************************\r\n         * Update logic\r\n         **************************************************************************\/\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    inventory_document_id,\r\n                    document_number,\r\n                    inventory_status_id,\r\n                    date_created_utc,\r\n                    date_updated_utc,\r\n                    date_completed_utc,\r\n                    created_by_user_id,\r\n                    completed_by_user_id\r\n                FROM forge.inventory_document \r\n                WHERE inventory_document_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.inventory_document\r\n            SET\r\n                document_number = @p_document_number,\r\n                inventory_status_id = @p_inventory_status_id,\r\n                date_created_utc = @p_date_created_utc,\r\n                date_updated_utc = @p_date_updated_utc,\r\n                date_completed_utc = @p_date_completed_utc,\r\n                created_by_user_id = @p_created_by_user_id,\r\n                completed_by_user_id = @p_completed_by_user_id\r\n            WHERE inventory_document_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    inventory_document_id,\r\n                    document_number,\r\n                    inventory_status_id,\r\n                    date_created_utc,\r\n                    date_updated_utc,\r\n                    date_completed_utc,\r\n                    created_by_user_id,\r\n                    completed_by_user_id\r\n                FROM forge.inventory_document \r\n                WHERE inventory_document_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n                WITH DiffData AS (\r\n                    SELECT \r\n                        'document_number' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].document_number') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].document_number') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].document_number') <> JSON_VALUE(@l_data_after, '$[0].document_number')\r\n                        AND JSON_VALUE(@l_data_before, '$[0].document_number') IS NOT NULL \r\n                        AND JSON_VALUE(@l_data_after, '$[0].document_number') IS NOT NULL\r\n                    UNION ALL\r\n                    SELECT \r\n                        'status_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].status_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].status_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].status_id') <> JSON_VALUE(@l_data_after, '$[0].status_id')\r\n                        AND JSON_VALUE(@l_data_before, '$[0].status_id') IS NOT NULL \r\n                        AND JSON_VALUE(@l_data_after, '$[0].status_id') IS NOT NULL\r\n                    UNION ALL\r\n                    SELECT \r\n                        'date_completed_utc' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].date_completed_utc') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].date_completed_utc') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].date_completed_utc') <> JSON_VALUE(@l_data_after, '$[0].date_completed_utc')\r\n                        AND JSON_VALUE(@l_data_before, '$[0].date_completed_utc') IS NOT NULL \r\n                        AND JSON_VALUE(@l_data_after, '$[0].date_completed_utc') IS NOT NULL\r\n                    UNION ALL\r\n                    SELECT \r\n                        'completed_by_user_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].completed_by_user_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].completed_by_user_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].completed_by_user_id') <> JSON_VALUE(@l_data_after, '$[0].completed_by_user_id')\r\n                        AND JSON_VALUE(@l_data_before, '$[0].completed_by_user_id') IS NOT NULL \r\n                        AND JSON_VALUE(@l_data_after, '$[0].completed_by_user_id') IS NOT NULL\r\n                )\r\n\r\n                SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'inventory_document',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated inventory_document',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        \/***************************************************************************\r\n         * Insert logic\r\n         **************************************************************************\/\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.inventory_document\r\n            (\r\n                inventory_document_id,\r\n                document_number,\r\n                inventory_status_id,\r\n                date_created_utc,\r\n                date_updated_utc,\r\n                date_completed_utc,\r\n                created_by_user_id,\r\n                completed_by_user_id\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_document_number,\r\n                @p_inventory_status_id,\r\n                @p_date_created_utc,\r\n                @p_date_updated_utc,\r\n                @p_date_completed_utc,\r\n                @p_created_by_user_id,\r\n                @p_completed_by_user_id\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    inventory_document_id,\r\n                    document_number,\r\n                    inventory_status_id,\r\n                    date_created_utc,\r\n                    date_updated_utc,\r\n                    date_completed_utc,\r\n                    created_by_user_id,\r\n                    completed_by_user_id\r\n                FROM forge.inventory_document \r\n                WHERE inventory_document_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'inventory_document',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into inventory_document',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    \/***************************************************************************\r\n     * CATCH block: handle failures\r\n     **************************************************************************\/\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        -- Decide action type based on what we were attempting\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3   -- was trying to delete\r\n            WHEN @l_exists = 1 THEN 2      -- was trying to update\r\n            ELSE 1                         -- was trying to insert\r\n        END;\r\n\r\n        -- Attempt to log the fail\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_caller_user_id,\r\n                @p_object_name = 'inventory_document',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,  -- FAILED\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n            -- Suppress nested logging failure to avoid recursion\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1682105033,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 2,
                    "ParameterName": "@p_caller_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 4,
                    "ParameterName": "@p_document_number",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 5,
                    "ParameterName": "@p_inventory_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 6,
                    "ParameterName": "@p_date_created_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 7,
                    "ParameterName": "@p_date_updated_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 8,
                    "ParameterName": "@p_date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 9,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 10,
                    "ParameterName": "@p_completed_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 11,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1682105033
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_document",
                    "parameter_id": 12,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1682105033
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_inventory_status",
            "create_date": "2025-06-29T15:24:18.223",
            "modify_date": "2025-06-29T15:24:18.223",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_inventory_status\r\n  PK: status_id (INT)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_inventory_status\r\n(\r\n    @p_record_id INT = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_inventory_status_name VARCHAR(50),\r\n    @p_description VARCHAR(255),\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.inventory_status WHERE inventory_status_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    inventory_status_id,\r\n                    inventory_status_name,\r\n                    description\r\n                FROM forge.inventory_status \r\n                WHERE inventory_status_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.inventory_status\r\n            WHERE inventory_status_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'inventory_status',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from inventory_status',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    inventory_status_id,\r\n                    inventory_status_name,\r\n                    description\r\n                FROM forge.inventory_status \r\n                WHERE inventory_status_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.inventory_status\r\n            SET\r\n                inventory_status_name = @p_inventory_status_name,\r\n                description = @p_description\r\n            WHERE inventory_status_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    inventory_status_id,\r\n                    inventory_status_name,\r\n                    description\r\n                FROM forge.inventory_status \r\n                WHERE inventory_status_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'inventory_status_name' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].inventory_status_name') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].inventory_status_name') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].inventory_status_name') <> JSON_VALUE(@l_data_after, '$[0].inventory_status_name')\r\n                UNION ALL\r\n                SELECT \r\n                    'description' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].description') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].description') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].description') <> JSON_VALUE(@l_data_after, '$[0].description')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'inventory_status',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated inventory_status',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = (SELECT ISNULL(MAX(inventory_status_id), 0) + 1 FROM forge.inventory_status);\r\n\r\n            INSERT INTO forge.inventory_status\r\n            (\r\n                inventory_status_id,\r\n                inventory_status_name,\r\n                description\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_inventory_status_name,\r\n                @p_description\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    inventory_status_id,\r\n                    inventory_status_name,\r\n                    description\r\n                FROM forge.inventory_status \r\n                WHERE inventory_status_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'inventory_status',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into inventory_status',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE WHEN @p_is_delete = 1 THEN 3 ELSE 1 END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'inventory_status',\r\n                @p_object_id = NULL,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1698105090,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_status",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1698105090
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_status",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1698105090
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_status",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1698105090
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_status",
                    "parameter_id": 4,
                    "ParameterName": "@p_inventory_status_name",
                    "DataType": "varchar",
                    "max_length": 50,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1698105090
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_status",
                    "parameter_id": 5,
                    "ParameterName": "@p_description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1698105090
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_status",
                    "parameter_id": 6,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1698105090
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_inventory_status",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1698105090
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_item_uom",
            "create_date": "2025-06-29T15:24:18.227",
            "modify_date": "2025-06-29T15:24:18.227",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_item_uom\r\n  PK: item_uom_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_item_uom\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_item_id UNIQUEIDENTIFIER,\r\n    @p_uom_code VARCHAR(20),\r\n    @p_item_code VARCHAR(100),\r\n    @p_conversion_factor DECIMAL(10,2),\r\n    @p_required_location_type_id INT,\r\n    @p_description VARCHAR(255),\r\n    @p_default_weight DECIMAL(10,2),\r\n    @p_default_height DECIMAL(10,2),\r\n    @p_default_width DECIMAL(10,2),\r\n    @p_default_length DECIMAL(10,2),\r\n    @p_is_primary BIT,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.item_uom WHERE item_uom_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    item_uom_id,\r\n                    item_id,\r\n                    uom_code,\r\n                    conversion_factor,\r\n                    is_primary\r\n                FROM forge.item_uom \r\n                WHERE item_uom_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.item_uom\r\n            WHERE item_uom_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'item_uom',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from item_uom',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    item_uom_id,\r\n                    item_id,\r\n                    uom_code,\r\n                    conversion_factor,\r\n                    is_primary\r\n                FROM forge.item_uom \r\n                WHERE item_uom_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.item_uom\r\n            SET\r\n                item_id = @p_item_id,\r\n                uom_code = @p_uom_code,\r\n                item_code = @p_item_code,\r\n                conversion_factor = @p_conversion_factor,\r\n                required_location_type_id = @p_required_location_type_id,\r\n                description = @p_description,\r\n                default_weight = @p_default_weight,\r\n                default_height = @p_default_height,\r\n                default_width = @p_default_width,\r\n                default_length = @p_default_length,\r\n                is_primary = @p_is_primary\r\n            WHERE item_uom_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    item_uom_id,\r\n                    item_id,\r\n                    uom_code,\r\n                    conversion_factor,\r\n                    is_primary\r\n                FROM forge.item_uom \r\n                WHERE item_uom_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'item_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].item_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].item_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].item_id') <> JSON_VALUE(@l_data_after, '$[0].item_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'uom_code' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].uom_code') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].uom_code') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].uom_code') <> JSON_VALUE(@l_data_after, '$[0].uom_code')\r\n                UNION ALL\r\n                SELECT \r\n                    'conversion_factor' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].conversion_factor') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].conversion_factor') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].conversion_factor') <> JSON_VALUE(@l_data_after, '$[0].conversion_factor')\r\n                UNION ALL\r\n                SELECT \r\n                    'is_primary' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].is_primary') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].is_primary') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].is_primary') <> JSON_VALUE(@l_data_after, '$[0].is_primary')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'item_uom',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated item_uom',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.item_uom\r\n            (\r\n                item_uom_id,\r\n                item_id,\r\n                uom_code,\r\n                item_code,\r\n                conversion_factor,\r\n                required_location_type_id,\r\n                description,\r\n                default_weight,\r\n                default_height,\r\n                default_width,\r\n                default_length,\r\n                is_primary\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_item_id,\r\n                @p_uom_code,\r\n                @p_item_code,\r\n                @p_conversion_factor,\r\n                @p_required_location_type_id,\r\n                @p_description,\r\n                @p_default_weight,\r\n                @p_default_height,\r\n                @p_default_width,\r\n                @p_default_length,\r\n                @p_is_primary\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    item_uom_id,\r\n                    item_id,\r\n                    uom_code,\r\n                    conversion_factor,\r\n                    is_primary\r\n                FROM forge.item_uom \r\n                WHERE item_uom_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'item_uom',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into item_uom',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'item_uom',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1714105147,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 4,
                    "ParameterName": "@p_item_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 5,
                    "ParameterName": "@p_uom_code",
                    "DataType": "varchar",
                    "max_length": 20,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 6,
                    "ParameterName": "@p_item_code",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 7,
                    "ParameterName": "@p_conversion_factor",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 8,
                    "ParameterName": "@p_required_location_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 9,
                    "ParameterName": "@p_description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 10,
                    "ParameterName": "@p_default_weight",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 11,
                    "ParameterName": "@p_default_height",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 12,
                    "ParameterName": "@p_default_width",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 13,
                    "ParameterName": "@p_default_length",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 14,
                    "ParameterName": "@p_is_primary",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 15,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1714105147
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item_uom",
                    "parameter_id": 16,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1714105147
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_item",
            "create_date": "2025-06-29T15:24:18.230",
            "modify_date": "2025-06-29T15:24:18.230",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_item\r\n  PK: item_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_item\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_item_number VARCHAR(100),\r\n    @p_description VARCHAR(255),\r\n    @p_item_status_id INT,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.item WHERE item_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    item_id,\r\n                    item_number,\r\n                    description,\r\n                    item_status_id\r\n                FROM forge.item \r\n                WHERE item_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.item\r\n            WHERE item_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'item',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from item',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    item_id,\r\n                    item_number,\r\n                    description,\r\n                    item_status_id\r\n                FROM forge.item \r\n                WHERE item_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.item\r\n            SET\r\n                item_number = @p_item_number,\r\n                description = @p_description,\r\n                item_status_id = @p_item_status_id\r\n            WHERE item_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    item_id,\r\n                    item_number,\r\n                    description,\r\n                    item_status_id\r\n                FROM forge.item \r\n                WHERE item_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'item_number' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].item_number') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].item_number') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].item_number') <> JSON_VALUE(@l_data_after, '$[0].item_number')\r\n                UNION ALL\r\n                SELECT \r\n                    'description' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].description') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].description') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].description') <> JSON_VALUE(@l_data_after, '$[0].description')\r\n                UNION ALL\r\n                SELECT \r\n                    'status_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].status_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].status_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].status_id') <> JSON_VALUE(@l_data_after, '$[0].status_id')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'item',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated item',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.item\r\n            (\r\n                item_id,\r\n                item_number,\r\n                description,\r\n                item_status_id\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_item_number,\r\n                @p_description,\r\n                @p_item_status_id\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    item_id,\r\n                    item_number,\r\n                    description,\r\n                    item_status_id\r\n                FROM forge.item \r\n                WHERE item_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'item',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into item',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'item',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1730105204,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1730105204
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1730105204
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1730105204
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item",
                    "parameter_id": 4,
                    "ParameterName": "@p_item_number",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1730105204
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item",
                    "parameter_id": 5,
                    "ParameterName": "@p_description",
                    "DataType": "varchar",
                    "max_length": 255,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1730105204
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item",
                    "parameter_id": 6,
                    "ParameterName": "@p_item_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1730105204
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1730105204
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_item",
                    "parameter_id": 8,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1730105204
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_order_line",
            "create_date": "2025-06-29T15:24:18.233",
            "modify_date": "2025-06-29T15:24:18.233",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_order_line\r\n  PK: order_line_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_order_line\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_transfer_order_id UNIQUEIDENTIFIER,\r\n    @p_item_uom_id UNIQUEIDENTIFIER,\r\n    @p_requested_quantity DECIMAL(10,2),\r\n    @p_fulfilled_quantity DECIMAL(10,2),\r\n    @p_fill_method_id INT,\r\n    @p_movement_type_id INT,\r\n    @p_source_location_id UNIQUEIDENTIFIER,\r\n    @p_destination_location_id UNIQUEIDENTIFIER,\r\n    @p_status_id INT,\r\n    @p_line_sequence INT,\r\n    @p_date_expected_utc DATETIME,\r\n    @p_date_completed_utc DATETIME = NULL,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.order_line WHERE order_line_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    order_line_id,\r\n                    transfer_order_id,\r\n                    item_uom_id,\r\n                    requested_quantity,\r\n                    fulfilled_quantity,\r\n                    fill_method_id,\r\n                    movement_type_id,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    status_id,\r\n                    line_sequence,\r\n                    date_created_utc,\r\n                    date_expected_utc,\r\n                    date_completed_utc\r\n                FROM forge.order_line \r\n                WHERE order_line_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.order_line\r\n            WHERE order_line_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'order_line',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from order_line',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    order_line_id,\r\n                    transfer_order_id,\r\n                    item_uom_id,\r\n                    requested_quantity,\r\n                    fulfilled_quantity,\r\n                    fill_method_id,\r\n                    movement_type_id,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    status_id,\r\n                    line_sequence,\r\n                    date_created_utc,\r\n                    date_expected_utc,\r\n                    date_completed_utc\r\n                FROM forge.order_line \r\n                WHERE order_line_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.order_line\r\n            SET\r\n                transfer_order_id = @p_transfer_order_id,\r\n                item_uom_id = @p_item_uom_id,\r\n                requested_quantity = @p_requested_quantity,\r\n                fulfilled_quantity = @p_fulfilled_quantity,\r\n                fill_method_id = @p_fill_method_id,\r\n                movement_type_id = @p_movement_type_id,\r\n                source_location_id = @p_source_location_id,\r\n                destination_location_id = @p_destination_location_id,\r\n                status_id = @p_status_id,\r\n                line_sequence = @p_line_sequence,\r\n                date_expected_utc = @p_date_expected_utc,\r\n                date_completed_utc = @p_date_completed_utc\r\n            WHERE order_line_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    order_line_id,\r\n                    transfer_order_id,\r\n                    item_uom_id,\r\n                    requested_quantity,\r\n                    fulfilled_quantity,\r\n                    fill_method_id,\r\n                    movement_type_id,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    status_id,\r\n                    line_sequence,\r\n                    date_created_utc,\r\n                    date_expected_utc,\r\n                    date_completed_utc\r\n                FROM forge.order_line \r\n                WHERE order_line_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n                WITH DiffData AS (\r\n                    SELECT \r\n                        'transfer_order_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].transfer_order_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].transfer_order_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].transfer_order_id') <> JSON_VALUE(@l_data_after, '$[0].transfer_order_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'item_uom_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].item_uom_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].item_uom_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].item_uom_id') <> JSON_VALUE(@l_data_after, '$[0].item_uom_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'requested_quantity' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].requested_quantity') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].requested_quantity') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].requested_quantity') <> JSON_VALUE(@l_data_after, '$[0].requested_quantity')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'fulfilled_quantity' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].fulfilled_quantity') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].fulfilled_quantity') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].fulfilled_quantity') <> JSON_VALUE(@l_data_after, '$[0].fulfilled_quantity')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'fill_method_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].fill_method_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].fill_method_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].fill_method_id') <> JSON_VALUE(@l_data_after, '$[0].fill_method_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'movement_type_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].movement_type_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].movement_type_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].movement_type_id') <> JSON_VALUE(@l_data_after, '$[0].movement_type_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'source_location_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].source_location_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].source_location_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].source_location_id') <> JSON_VALUE(@l_data_after, '$[0].source_location_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'destination_location_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].destination_location_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].destination_location_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].destination_location_id') <> JSON_VALUE(@l_data_after, '$[0].destination_location_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'status_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].status_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].status_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].status_id') <> JSON_VALUE(@l_data_after, '$[0].status_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'line_sequence' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].line_sequence') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].line_sequence') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].line_sequence') <> JSON_VALUE(@l_data_after, '$[0].line_sequence')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'date_expected_utc' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].date_expected_utc') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].date_expected_utc') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].date_expected_utc') <> JSON_VALUE(@l_data_after, '$[0].date_expected_utc')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'date_completed_utc' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].date_completed_utc') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].date_completed_utc') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].date_completed_utc') <> JSON_VALUE(@l_data_after, '$[0].date_completed_utc')\r\n                )\r\n                          \r\n               SELECT @l_diff_data = (SELECT * FROM DiffData FOR JSON PATH);\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'order_line',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated order_line',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.order_line\r\n            (\r\n                order_line_id,\r\n                transfer_order_id,\r\n                item_uom_id,\r\n                requested_quantity,\r\n                fulfilled_quantity,\r\n                fill_method_id,\r\n                movement_type_id,\r\n                source_location_id,\r\n                destination_location_id,\r\n                status_id,\r\n                line_sequence,\r\n                date_expected_utc,\r\n                date_completed_utc\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_transfer_order_id,\r\n                @p_item_uom_id,\r\n                @p_requested_quantity,\r\n                @p_fulfilled_quantity,\r\n                @p_fill_method_id,\r\n                @p_movement_type_id,\r\n                @p_source_location_id,\r\n                @p_destination_location_id,\r\n                @p_status_id,\r\n                @p_line_sequence,\r\n                @p_date_expected_utc,\r\n                @p_date_completed_utc\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    order_line_id,\r\n                    transfer_order_id,\r\n                    item_uom_id,\r\n                    requested_quantity,\r\n                    fulfilled_quantity,\r\n                    fill_method_id,\r\n                    movement_type_id,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    status_id,\r\n                    line_sequence,\r\n                    date_created_utc,\r\n                    date_expected_utc,\r\n                    date_completed_utc\r\n                FROM forge.order_line \r\n                WHERE order_line_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'order_line',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into order_line',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'order_line',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1746105261,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 4,
                    "ParameterName": "@p_transfer_order_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 5,
                    "ParameterName": "@p_item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 6,
                    "ParameterName": "@p_requested_quantity",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 7,
                    "ParameterName": "@p_fulfilled_quantity",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 8,
                    "ParameterName": "@p_fill_method_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 9,
                    "ParameterName": "@p_movement_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 10,
                    "ParameterName": "@p_source_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 11,
                    "ParameterName": "@p_destination_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 12,
                    "ParameterName": "@p_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 13,
                    "ParameterName": "@p_line_sequence",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 14,
                    "ParameterName": "@p_date_expected_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 15,
                    "ParameterName": "@p_date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 16,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1746105261
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_order_line",
                    "parameter_id": 17,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1746105261
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_stock",
            "create_date": "2025-06-29T15:24:18.237",
            "modify_date": "2025-06-29T15:24:18.237",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_stock\r\n  PK: stock_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_stock\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_item_uom_id UNIQUEIDENTIFIER,\r\n    @p_storage_location_id UNIQUEIDENTIFIER,\r\n    @p_quantity_on_hand INT,\r\n    @p_quantity_allocated INT,\r\n    @p_stock_status_id INT,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.stock WHERE stock_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    stock_id,\r\n                    item_uom_id,\r\n                    storage_location_id,\r\n                    quantity_on_hand,\r\n                    quantity_allocated,\r\n                    stock_status_id,\r\n                    date_created_utc,\r\n                    date_modified_utc\r\n                FROM forge.stock \r\n                WHERE stock_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.stock\r\n            WHERE stock_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'stock',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from stock',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    stock_id,\r\n                    item_uom_id,\r\n                    storage_location_id,\r\n                    quantity_on_hand,\r\n                    quantity_allocated,\r\n                    stock_status_id,\r\n                    date_created_utc,\r\n                    date_modified_utc\r\n                FROM forge.stock \r\n                WHERE stock_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.stock\r\n            SET\r\n                item_uom_id = @p_item_uom_id,\r\n                storage_location_id = @p_storage_location_id,\r\n                quantity_on_hand = @p_quantity_on_hand,\r\n                quantity_allocated = @p_quantity_allocated,\r\n                stock_status_id = @p_stock_status_id,\r\n                date_modified_utc = GETUTCDATE()\r\n            WHERE stock_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    stock_id,\r\n                    item_uom_id,\r\n                    storage_location_id,\r\n                    quantity_on_hand,\r\n                    quantity_allocated,\r\n                    stock_status_id,\r\n                    date_created_utc,\r\n                    date_modified_utc\r\n                FROM forge.stock \r\n                WHERE stock_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'item_uom_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].item_uom_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].item_uom_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].item_uom_id') <> JSON_VALUE(@l_data_after, '$[0].item_uom_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'storage_location_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].storage_location_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].storage_location_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].storage_location_id') <> JSON_VALUE(@l_data_after, '$[0].storage_location_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'quantity_on_hand' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].quantity_on_hand') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].quantity_on_hand') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].quantity_on_hand') <> JSON_VALUE(@l_data_after, '$[0].quantity_on_hand')\r\n                UNION ALL\r\n                SELECT \r\n                    'quantity_allocated' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].quantity_allocated') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].quantity_allocated') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].quantity_allocated') <> JSON_VALUE(@l_data_after, '$[0].quantity_allocated')\r\n                UNION ALL\r\n                SELECT \r\n                    'stock_status_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].stock_status_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].stock_status_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].stock_status_id') <> JSON_VALUE(@l_data_after, '$[0].stock_status_id')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'stock',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated stock',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.stock\r\n            (\r\n                stock_id,\r\n                item_uom_id,\r\n                storage_location_id,\r\n                quantity_on_hand,\r\n                quantity_allocated,\r\n                stock_status_id\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_item_uom_id,\r\n                @p_storage_location_id,\r\n                @p_quantity_on_hand,\r\n                @p_quantity_allocated,\r\n                @p_stock_status_id\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    stock_id,\r\n                    item_uom_id,\r\n                    storage_location_id,\r\n                    quantity_on_hand,\r\n                    quantity_allocated,\r\n                    stock_status_id,\r\n                    date_created_utc,\r\n                    date_modified_utc\r\n                FROM forge.stock \r\n                WHERE stock_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'stock',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into stock',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'stock',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1762105318,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 4,
                    "ParameterName": "@p_item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 5,
                    "ParameterName": "@p_storage_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 6,
                    "ParameterName": "@p_quantity_on_hand",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 7,
                    "ParameterName": "@p_quantity_allocated",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 8,
                    "ParameterName": "@p_stock_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 9,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1762105318
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_stock",
                    "parameter_id": 10,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1762105318
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_transfer_order",
            "create_date": "2025-06-29T15:24:18.240",
            "modify_date": "2025-06-29T15:24:18.240",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_transfer_order\r\n  PK: transfer_order_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_transfer_order\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_order_number VARCHAR(100),\r\n    @p_transfer_order_type_id INT,\r\n    @p_status_id INT,\r\n    @p_source_location_id UNIQUEIDENTIFIER,\r\n    @p_destination_location_id UNIQUEIDENTIFIER,\r\n    @p_fill_method_id INT,\r\n    @p_priority INT,\r\n    @p_date_expected_utc DATETIME,\r\n    @p_date_completed_utc DATETIME = NULL,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.transfer_order WHERE transfer_order_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    transfer_order_id,\r\n                    order_number,\r\n                    transfer_order_type_id,\r\n                    transfer_order_status_id,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    fill_method_id,\r\n                    priority,\r\n                    date_created_utc,\r\n                    date_expected_utc,\r\n                    date_completed_utc\r\n                FROM forge.transfer_order \r\n                WHERE transfer_order_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.transfer_order\r\n            WHERE transfer_order_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'transfer_order',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from transfer_order',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    transfer_order_id,\r\n                    order_number,\r\n                    transfer_order_type_id,\r\n                    transfer_order_status_id,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    fill_method_id,\r\n                    priority,\r\n                    date_created_utc,\r\n                    date_expected_utc,\r\n                    date_completed_utc\r\n                FROM forge.transfer_order \r\n                WHERE transfer_order_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.transfer_order\r\n            SET\r\n                order_number = @p_order_number,\r\n                transfer_order_type_id = @p_transfer_order_type_id,\r\n                transfer_order_status_id = @p_status_id,\r\n                source_location_id = @p_source_location_id,\r\n                destination_location_id = @p_destination_location_id,\r\n                fill_method_id = @p_fill_method_id,\r\n                priority = @p_priority,\r\n                date_expected_utc = @p_date_expected_utc,\r\n                date_completed_utc = @p_date_completed_utc\r\n            WHERE transfer_order_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    transfer_order_id,\r\n                    order_number,\r\n                    transfer_order_type_id,\r\n                    transfer_order_status_id,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    fill_method_id,\r\n                    priority,\r\n                    date_created_utc,\r\n                    date_expected_utc,\r\n                    date_completed_utc\r\n                FROM forge.transfer_order \r\n                WHERE transfer_order_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n                WITH DiffData AS (\r\n                    SELECT \r\n                        'order_number' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].order_number') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].order_number') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].order_number') <> JSON_VALUE(@l_data_after, '$[0].order_number')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'transfer_order_type_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].transfer_order_type_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].transfer_order_type_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].transfer_order_type_id') <> JSON_VALUE(@l_data_after, '$[0].transfer_order_type_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'transfer_order_status_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].transfer_order_status_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].transfer_order_status_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].transfer_order_status_id') <> JSON_VALUE(@l_data_after, '$[0].transfer_order_status_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'source_location_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].source_location_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].source_location_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].source_location_id') <> JSON_VALUE(@l_data_after, '$[0].source_location_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'destination_location_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].destination_location_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].destination_location_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].destination_location_id') <> JSON_VALUE(@l_data_after, '$[0].destination_location_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'fill_method_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].fill_method_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].fill_method_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].fill_method_id') <> JSON_VALUE(@l_data_after, '$[0].fill_method_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'priority' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].priority') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].priority') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].priority') <> JSON_VALUE(@l_data_after, '$[0].priority')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'date_expected_utc' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].date_expected_utc') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].date_expected_utc') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].date_expected_utc') <> JSON_VALUE(@l_data_after, '$[0].date_expected_utc')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'date_completed_utc' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].date_completed_utc') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].date_completed_utc') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].date_completed_utc') <> JSON_VALUE(@l_data_after, '$[0].date_completed_utc')\r\n                )\r\n                SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH);\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'transfer_order',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated transfer_order',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.transfer_order\r\n            (\r\n                transfer_order_id,\r\n                order_number,\r\n                transfer_order_type_id,\r\n                transfer_order_status_id,\r\n                source_location_id,\r\n                destination_location_id,\r\n                fill_method_id,\r\n                priority,\r\n                date_expected_utc,\r\n                date_completed_utc\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_order_number,\r\n                @p_transfer_order_type_id,\r\n                @p_status_id,\r\n                @p_source_location_id,\r\n                @p_destination_location_id,\r\n                @p_fill_method_id,\r\n                @p_priority,\r\n                @p_date_expected_utc,\r\n                @p_date_completed_utc\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    transfer_order_id,\r\n                    order_number,\r\n                    transfer_order_type_id,\r\n                    transfer_order_status_id,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    fill_method_id,\r\n                    priority,\r\n                    date_created_utc,\r\n                    date_expected_utc,\r\n                    date_completed_utc\r\n                FROM forge.transfer_order \r\n                WHERE transfer_order_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'transfer_order',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into transfer_order',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'transfer_order',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1778105375,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 4,
                    "ParameterName": "@p_order_number",
                    "DataType": "varchar",
                    "max_length": 100,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 5,
                    "ParameterName": "@p_transfer_order_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 6,
                    "ParameterName": "@p_status_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 7,
                    "ParameterName": "@p_source_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 8,
                    "ParameterName": "@p_destination_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 9,
                    "ParameterName": "@p_fill_method_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 10,
                    "ParameterName": "@p_priority",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 11,
                    "ParameterName": "@p_date_expected_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 12,
                    "ParameterName": "@p_date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 13,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1778105375
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_transfer_order",
                    "parameter_id": 14,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1778105375
                }
            ]
        },
        {
            "SchemaName": "forge",
            "ProcedureName": "sp_upsert_sub_order_line_task",
            "create_date": "2025-06-29T15:24:18.247",
            "modify_date": "2025-06-29T15:24:18.247",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_sub_order_line_task\r\n  PK: task_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE forge.sp_upsert_sub_order_line_task\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_order_line_id UNIQUEIDENTIFIER,\r\n    @p_movement_type_id INT,\r\n    @p_item_uom_id UNIQUEIDENTIFIER,\r\n    @p_quantity DECIMAL(10,2),\r\n    @p_actual_quantity DECIMAL(10,2),\r\n    @p_source_location_id UNIQUEIDENTIFIER,\r\n    @p_destination_location_id UNIQUEIDENTIFIER,\r\n    @p_task_state_id INT,\r\n    @p_assigned_to_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_priority INT = NULL,\r\n    @p_validation_type_id INT = NULL,\r\n    @p_date_assigned_utc DATETIME = NULL,\r\n    @p_date_started_utc DATETIME = NULL,\r\n    @p_date_completed_utc DATETIME = NULL,\r\n    @p_notes VARCHAR(500) = NULL,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM forge.sub_order_line_task WHERE task_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    task_id,\r\n                    order_line_id,\r\n                    movement_type_id,\r\n                    item_uom_id,\r\n                    quantity,\r\n                    actual_quantity,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    task_state_id,\r\n                    assigned_to_user_id,\r\n                    priority,\r\n                    validation_type_id,\r\n                    date_created_utc,\r\n                    date_assigned_utc,\r\n                    date_started_utc,\r\n                    date_completed_utc,\r\n                    notes\r\n                FROM forge.sub_order_line_task \r\n                WHERE task_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM forge.sub_order_line_task\r\n            WHERE task_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'FORGE',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'sub_order_line_task',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from sub_order_line_task',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    task_id,\r\n                    order_line_id,\r\n                    movement_type_id,\r\n                    item_uom_id,\r\n                    quantity,\r\n                    actual_quantity,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    task_state_id,\r\n                    assigned_to_user_id,\r\n                    priority,\r\n                    validation_type_id,\r\n                    date_created_utc,\r\n                    date_assigned_utc,\r\n                    date_started_utc,\r\n                    date_completed_utc,\r\n                    notes\r\n                FROM forge.sub_order_line_task \r\n                WHERE task_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE forge.sub_order_line_task\r\n            SET\r\n                order_line_id = @p_order_line_id,\r\n                movement_type_id = @p_movement_type_id,\r\n                item_uom_id = @p_item_uom_id,\r\n                quantity = @p_quantity,\r\n                actual_quantity = @p_actual_quantity,\r\n                source_location_id = @p_source_location_id,\r\n                destination_location_id = @p_destination_location_id,\r\n                task_state_id = @p_task_state_id,\r\n                assigned_to_user_id = @p_assigned_to_user_id,\r\n                priority = @p_priority,\r\n                validation_type_id = @p_validation_type_id,\r\n                date_assigned_utc = @p_date_assigned_utc,\r\n                date_started_utc = @p_date_started_utc,\r\n                date_completed_utc = @p_date_completed_utc,\r\n                notes = @p_notes\r\n            WHERE task_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    task_id,\r\n                    order_line_id,\r\n                    movement_type_id,\r\n                    item_uom_id,\r\n                    quantity,\r\n                    actual_quantity,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    task_state_id,\r\n                    assigned_to_user_id,\r\n                    priority,\r\n                    validation_type_id,\r\n                    date_created_utc,\r\n                    date_assigned_utc,\r\n                    date_started_utc,\r\n                    date_completed_utc,\r\n                    notes\r\n                FROM forge.sub_order_line_task \r\n                WHERE task_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n                WITH DiffData AS (\r\n                    SELECT \r\n                        'order_line_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].order_line_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].order_line_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].order_line_id') <> JSON_VALUE(@l_data_after, '$[0].order_line_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'movement_type_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].movement_type_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].movement_type_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].movement_type_id') <> JSON_VALUE(@l_data_after, '$[0].movement_type_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'item_uom_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].item_uom_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].item_uom_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].item_uom_id') <> JSON_VALUE(@l_data_after, '$[0].item_uom_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'quantity' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].quantity') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].quantity') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].quantity') <> JSON_VALUE(@l_data_after, '$[0].quantity')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'actual_quantity' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].actual_quantity') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].actual_quantity') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].actual_quantity') <> JSON_VALUE(@l_data_after, '$[0].actual_quantity')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'source_location_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].source_location_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].source_location_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].source_location_id') <> JSON_VALUE(@l_data_after, '$[0].source_location_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'destination_location_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].destination_location_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].destination_location_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].destination_location_id') <> JSON_VALUE(@l_data_after, '$[0].destination_location_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'task_state_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].task_state_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].task_state_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].task_state_id') <> JSON_VALUE(@l_data_after, '$[0].task_state_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'assigned_to_user_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].assigned_to_user_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].assigned_to_user_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].assigned_to_user_id') <> JSON_VALUE(@l_data_after, '$[0].assigned_to_user_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'priority' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].priority') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].priority') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].priority') <> JSON_VALUE(@l_data_after, '$[0].priority')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'validation_type_id' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].validation_type_id') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].validation_type_id') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].validation_type_id') <> JSON_VALUE(@l_data_after, '$[0].validation_type_id')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'date_assigned_utc' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].date_assigned_utc') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].date_assigned_utc') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].date_assigned_utc') <> JSON_VALUE(@l_data_after, '$[0].date_assigned_utc')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'date_started_utc' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].date_started_utc') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].date_started_utc') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].date_started_utc') <> JSON_VALUE(@l_data_after, '$[0].date_started_utc')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'date_completed_utc' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].date_completed_utc') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].date_completed_utc') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].date_completed_utc') <> JSON_VALUE(@l_data_after, '$[0].date_completed_utc')\r\n                    UNION ALL\r\n                    SELECT \r\n                        'notes' as [field],\r\n                        JSON_VALUE(@l_data_before, '$[0].notes') as [old_value],\r\n                        JSON_VALUE(@l_data_after, '$[0].notes') as [new_value]\r\n                    WHERE JSON_VALUE(@l_data_before, '$[0].notes') <> JSON_VALUE(@l_data_after, '$[0].notes')\r\n                )\r\n               SELECT @l_diff_data = (  SELECT * FROM DiffData FOR JSON PATH);\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'sub_order_line_task',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated sub_order_line_task',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO forge.sub_order_line_task\r\n            (\r\n                task_id,\r\n                order_line_id,\r\n                movement_type_id,\r\n                item_uom_id,\r\n                quantity,\r\n                actual_quantity,\r\n                source_location_id,\r\n                destination_location_id,\r\n                task_state_id,\r\n                assigned_to_user_id,\r\n                priority,\r\n                validation_type_id,\r\n                date_assigned_utc,\r\n                date_started_utc,\r\n                date_completed_utc,\r\n                notes\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_order_line_id,\r\n                @p_movement_type_id,\r\n                @p_item_uom_id,\r\n                @p_quantity,\r\n                @p_actual_quantity,\r\n                @p_source_location_id,\r\n                @p_destination_location_id,\r\n                @p_task_state_id,\r\n                @p_assigned_to_user_id,\r\n                @p_priority,\r\n                @p_validation_type_id,\r\n                @p_date_assigned_utc,\r\n                @p_date_started_utc,\r\n                @p_date_completed_utc,\r\n                @p_notes\r\n            );\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    task_id,\r\n                    order_line_id,\r\n                    movement_type_id,\r\n                    item_uom_id,\r\n                    quantity,\r\n                    actual_quantity,\r\n                    source_location_id,\r\n                    destination_location_id,\r\n                    task_state_id,\r\n                    assigned_to_user_id,\r\n                    priority,\r\n                    validation_type_id,\r\n                    date_created_utc,\r\n                    date_assigned_utc,\r\n                    date_started_utc,\r\n                    date_completed_utc,\r\n                    notes\r\n                FROM forge.sub_order_line_task \r\n                WHERE task_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'sub_order_line_task',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into sub_order_line_task',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'FORGE',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'sub_order_line_task',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1794105432,
            "Parameters": [
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 4,
                    "ParameterName": "@p_order_line_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 5,
                    "ParameterName": "@p_movement_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 6,
                    "ParameterName": "@p_item_uom_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 7,
                    "ParameterName": "@p_quantity",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 8,
                    "ParameterName": "@p_actual_quantity",
                    "DataType": "decimal",
                    "max_length": 9,
                    "precision": 10,
                    "scale": 2,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 9,
                    "ParameterName": "@p_source_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 10,
                    "ParameterName": "@p_destination_location_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 11,
                    "ParameterName": "@p_task_state_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 12,
                    "ParameterName": "@p_assigned_to_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 13,
                    "ParameterName": "@p_priority",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 14,
                    "ParameterName": "@p_validation_type_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 15,
                    "ParameterName": "@p_date_assigned_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 16,
                    "ParameterName": "@p_date_started_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 17,
                    "ParameterName": "@p_date_completed_utc",
                    "DataType": "datetime",
                    "max_length": 8,
                    "precision": 23,
                    "scale": 3,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 18,
                    "ParameterName": "@p_notes",
                    "DataType": "varchar",
                    "max_length": 500,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 19,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1794105432
                },
                {
                    "SchemaName": "forge",
                    "ProcedureName": "sp_upsert_sub_order_line_task",
                    "parameter_id": 20,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1794105432
                }
            ]
        },
        {
            "SchemaName": "auth",
            "ProcedureName": "sp_upsert_role_claim_mapping",
            "create_date": "2025-06-29T15:24:18.250",
            "modify_date": "2025-06-29T15:24:18.250",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_role_claim_mapping\r\n  PK: mapping_id\r\n***************************************************************************************\/\r\nCREATE PROCEDURE auth.sp_upsert_role_claim_mapping\r\n(\r\n    @p_record_id INT = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_role_id INT,\r\n    @p_claim_id INT,\r\n    @p_level INT,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX);\r\n    DECLARE @l_data_after NVARCHAR(MAX);\r\n    DECLARE @l_diff_data NVARCHAR(MAX);\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM auth.role_claim_mapping WHERE mapping_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    mapping_id,\r\n                    role_id,\r\n                    claim_id,\r\n                    level\r\n                FROM auth.role_claim_mapping \r\n                WHERE mapping_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM auth.role_claim_mapping\r\n            WHERE mapping_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'AUTH',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'role_claim_mapping',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from role_claim_mapping',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    mapping_id,\r\n                    role_id,\r\n                    claim_id,\r\n                    level\r\n                FROM auth.role_claim_mapping \r\n                WHERE mapping_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE auth.role_claim_mapping\r\n            SET\r\n                role_id = @p_role_id,\r\n                claim_id = @p_claim_id,\r\n                level = @p_level\r\n            WHERE mapping_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    mapping_id,\r\n                    role_id,\r\n                    claim_id,\r\n                    level\r\n                FROM auth.role_claim_mapping \r\n                WHERE mapping_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'role_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].role_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].role_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].role_id') <> JSON_VALUE(@l_data_after, '$[0].role_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'claim_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].claim_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].claim_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].claim_id') <> JSON_VALUE(@l_data_after, '$[0].claim_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'level' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].level') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].level') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].level') <> JSON_VALUE(@l_data_after, '$[0].level')\r\n            )\r\n\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'role_claim_mapping',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated role_claim_mapping',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            INSERT INTO auth.role_claim_mapping\r\n            (\r\n                role_id,\r\n                claim_id,\r\n                level\r\n            )\r\n            VALUES\r\n            (\r\n                @p_role_id,\r\n                @p_claim_id,\r\n                @p_level\r\n            );\r\n\r\n            SET @p_record_id = SCOPE_IDENTITY();\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    mapping_id,\r\n                    role_id,\r\n                    claim_id,\r\n                    level\r\n                FROM auth.role_claim_mapping \r\n                WHERE mapping_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'role_claim_mapping',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into role_claim_mapping',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'role_claim_mapping',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1810105489,
            "Parameters": [
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_role_claim_mapping",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1810105489
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_role_claim_mapping",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1810105489
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_role_claim_mapping",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1810105489
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_role_claim_mapping",
                    "parameter_id": 4,
                    "ParameterName": "@p_role_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1810105489
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_role_claim_mapping",
                    "parameter_id": 5,
                    "ParameterName": "@p_claim_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1810105489
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_role_claim_mapping",
                    "parameter_id": 6,
                    "ParameterName": "@p_level",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1810105489
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_role_claim_mapping",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1810105489
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_role_claim_mapping",
                    "parameter_id": 8,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1810105489
                }
            ]
        },
        {
            "SchemaName": "auth",
            "ProcedureName": "sp_upsert_roles",
            "create_date": "2025-06-29T15:24:18.250",
            "modify_date": "2025-06-29T15:24:18.250",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_roles\r\n  PK: role_id (INT - IDENTITY)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE auth.sp_upsert_roles\r\n(\r\n    @p_record_id INT = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_role VARCHAR(32),\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX) = NULL;\r\n    DECLARE @l_data_after NVARCHAR(MAX) = NULL;\r\n    DECLARE @l_diff_data NVARCHAR(MAX) = NULL;\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM auth.roles WHERE role_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Delete user_role_mapping records and log them\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    mapping_id,\r\n                    user_id,\r\n                    role_id\r\n                FROM auth.user_role_mapping \r\n                WHERE role_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM auth.user_role_mapping WHERE role_id = @p_record_id;\r\n            \r\n            -- Log user_role_mapping deletes if any existed\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'AUTH',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'user_role_mapping',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = 3,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted user_role_mapping records for role',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n\r\n            -- Reset the @l_data_before variable\r\n            SET @l_data_before = NULL;\r\n\r\n            -- Delete role_claim_mapping records and log them\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    [mapping_id],\r\n                    [role_id],\r\n                    [claim_id],\r\n                    [level]\r\n                FROM auth.role_claim_mapping \r\n                WHERE role_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM auth.role_claim_mapping WHERE role_id = @p_record_id;\r\n            \r\n            -- Log role_claim_mapping deletes if any existed\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'AUTH',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'role_claim_mapping',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = 3,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted role_claim_mapping records for role',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n\r\n            -- Reset the @l_data_before variable\r\n            SET @l_data_before = NULL;\r\n\r\n            -- Delete the role and log it\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    role_id,\r\n                    role\r\n                FROM auth.roles \r\n                WHERE role_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM auth.roles\r\n            WHERE role_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'AUTH',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'roles',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from roles',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    role_id,\r\n                    role\r\n                FROM auth.roles \r\n                WHERE role_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE auth.roles\r\n            SET\r\n                role = @p_role\r\n            WHERE role_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    role_id,\r\n                    role\r\n                FROM auth.roles \r\n                WHERE role_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'role' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].role') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].role') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].role') <> JSON_VALUE(@l_data_after, '$[0].role')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'roles',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated roles',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- For insert, we don't specify role_id as it's IDENTITY\r\n            INSERT INTO auth.roles\r\n            (\r\n                role\r\n            )\r\n            VALUES\r\n            (\r\n                @p_role\r\n            );\r\n\r\n            -- Get the generated role_id for logging\r\n            SET @p_record_id = SCOPE_IDENTITY();\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    role_id,\r\n                    role\r\n                FROM auth.roles \r\n                WHERE role_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'roles',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into roles',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        SET @l_action_type_id = CASE\r\n            WHEN @p_is_delete = 1 THEN 3\r\n            WHEN @l_exists = 1 THEN 2\r\n            ELSE 1\r\n        END;\r\n\r\n        BEGIN TRY\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_transaction_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'roles',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 2,\r\n                @p_data_before = NULL,\r\n                @p_data_after = NULL,\r\n                @p_diff_data = NULL,\r\n                @p_message = @p_return_result_message,\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = NULL;\r\n        END TRY\r\n        BEGIN CATCH\r\n        END CATCH\r\n    END CATCH\r\nEND;",
            "object_id": 1826105546,
            "Parameters": [
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_roles",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1826105546
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_roles",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1826105546
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_roles",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1826105546
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_roles",
                    "parameter_id": 4,
                    "ParameterName": "@p_role",
                    "DataType": "varchar",
                    "max_length": 32,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1826105546
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_roles",
                    "parameter_id": 5,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1826105546
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_roles",
                    "parameter_id": 6,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1826105546
                }
            ]
        },
        {
            "SchemaName": "auth",
            "ProcedureName": "sp_upsert_user_role_mapping",
            "create_date": "2025-06-29T15:24:18.253",
            "modify_date": "2025-06-29T15:24:18.253",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_user_role_mapping\r\n  PK: mapping_id (INT)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE auth.sp_upsert_user_role_mapping\r\n(\r\n    @p_record_id INT = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_user_id UNIQUEIDENTIFIER,\r\n    @p_role_id INT,\r\n\r\n    -- Logging\r\n    @p_loggingid UNIQUEIDENTIFIER = NULL,\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = ISNULL(@p_loggingid, NEWID());\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX) = NULL;\r\n    DECLARE @l_data_after NVARCHAR(MAX) = NULL;\r\n    DECLARE @l_diff_data NVARCHAR(MAX) = NULL;\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM auth.user_role_mapping WHERE mapping_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Get the user_id for logging before deletion\r\n            DECLARE @l_user_id UNIQUEIDENTIFIER;\r\n            SELECT @l_user_id = user_id \r\n            FROM auth.user_role_mapping \r\n            WHERE mapping_id = @p_record_id;\r\n\r\n            -- Capture data before deletion\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    mapping_id,\r\n                    user_id,\r\n                    role_id\r\n                FROM auth.user_role_mapping \r\n                WHERE mapping_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            DELETE FROM auth.user_role_mapping\r\n            WHERE mapping_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'AUTH',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'user_role_mapping',\r\n                    @p_object_id = @l_user_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from user_role_mapping',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    mapping_id,\r\n                    user_id,\r\n                    role_id\r\n                FROM auth.user_role_mapping \r\n                WHERE mapping_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE auth.user_role_mapping\r\n            SET\r\n                user_id = @p_user_id,\r\n                role_id = @p_role_id\r\n            WHERE mapping_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    mapping_id,\r\n                    user_id,\r\n                    role_id\r\n                FROM auth.user_role_mapping \r\n                WHERE mapping_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'user_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].user_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].user_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].user_id') <> JSON_VALUE(@l_data_after, '$[0].user_id')\r\n                UNION ALL\r\n                SELECT \r\n                    'role_id' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].role_id') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].role_id') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].role_id') <> JSON_VALUE(@l_data_after, '$[0].role_id')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'user_role_mapping',\r\n                @p_object_id = @p_user_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated user_role_mapping',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            INSERT INTO auth.user_role_mapping\r\n            (\r\n                user_id,\r\n                role_id\r\n            )\r\n            VALUES\r\n            (\r\n                @p_user_id,\r\n                @p_role_id\r\n            );\r\n\r\n            SET @p_record_id = SCOPE_IDENTITY();\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    mapping_id,\r\n                    user_id,\r\n                    role_id\r\n                FROM auth.user_role_mapping \r\n                WHERE mapping_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'user_role_mapping',\r\n                @p_object_id = @p_user_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into user_role_mapping',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        EXEC core.sp_log_transaction\r\n            @p_logging_id = @l_transaction_log_id,\r\n            @p_source_system = 'AUTH',\r\n            @p_user_id = @p_created_by_user_id,\r\n            @p_object_name = 'user_role_mapping',\r\n            @p_object_id = @p_user_id,\r\n            @p_action_type_id = 4, -- Error\r\n            @p_status_code_id = 2, -- Error\r\n            @p_data_before = NULL,\r\n            @p_data_after = NULL,\r\n            @p_diff_data = NULL,\r\n            @p_message = @p_return_result_message,\r\n            @p_context_id = NULL,\r\n            @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n            @p_return_result_message = @p_return_result_message OUTPUT,\r\n            @p_logging_id_out = @l_transaction_log_id OUTPUT;\r\n    END CATCH\r\nEND",
            "object_id": 1842105603,
            "Parameters": [
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_user_role_mapping",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1842105603
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_user_role_mapping",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1842105603
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_user_role_mapping",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1842105603
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_user_role_mapping",
                    "parameter_id": 4,
                    "ParameterName": "@p_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1842105603
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_user_role_mapping",
                    "parameter_id": 5,
                    "ParameterName": "@p_role_id",
                    "DataType": "int",
                    "max_length": 4,
                    "precision": 10,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1842105603
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_user_role_mapping",
                    "parameter_id": 6,
                    "ParameterName": "@p_loggingid",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1842105603
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_user_role_mapping",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1842105603
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_user_role_mapping",
                    "parameter_id": 8,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1842105603
                }
            ]
        },
        {
            "SchemaName": "auth",
            "ProcedureName": "sp_upsert_users",
            "create_date": "2025-06-29T15:24:18.257",
            "modify_date": "2025-06-29T15:24:18.257",
            "ProcedureDefinition": "\/***************************************************************************************\r\n  Procedure: sp_upsert_users\r\n  PK: user_id (UNIQUEIDENTIFIER)\r\n***************************************************************************************\/\r\nCREATE PROCEDURE auth.sp_upsert_users\r\n(\r\n    @p_record_id UNIQUEIDENTIFIER = NULL,\r\n    @p_created_by_user_id UNIQUEIDENTIFIER = NULL,\r\n    @p_is_delete BIT = 0,\r\n\r\n    -- Table-specific columns\r\n    @p_username VARCHAR(32),\r\n    @p_password_hash VARCHAR(244),\r\n    @p_password_salt VARCHAR(244),\r\n\r\n    -- Outputs\r\n    @p_return_result_ok BIT OUTPUT,\r\n    @p_return_result_message NVARCHAR(MAX) OUTPUT\r\n)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Default to NONE user if no user ID is provided\r\n    IF @p_created_by_user_id IS NULL\r\n        SET @p_created_by_user_id = '00000000-0000-0000-0000-000000000001'; -- NONE user\r\n\r\n    DECLARE @l_log_id UNIQUEIDENTIFIER = NEWID();\r\n    DECLARE @l_exists BIT = 0;\r\n    DECLARE @l_action_type_id INT;\r\n    DECLARE @l_data_before NVARCHAR(MAX) = NULL;\r\n    DECLARE @l_data_after NVARCHAR(MAX) = NULL;\r\n    DECLARE @l_diff_data NVARCHAR(MAX) = NULL;\r\n\r\n    IF @p_record_id IS NOT NULL\r\n       AND EXISTS(SELECT 1 FROM auth.users WHERE user_id = @p_record_id)\r\n    BEGIN\r\n        SET @l_exists = 1;\r\n    END\r\n\r\n    BEGIN TRY\r\n\r\n        IF @p_is_delete = 1 AND @p_record_id IS NOT NULL AND @l_exists = 1\r\n        BEGIN\r\n            -- Delete user_sessions records and log them\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    session_id,\r\n                    user_id,\r\n                    session_token,\r\n                    date_created_utc,\r\n                    date_expires_utc\r\n                FROM auth.user_sessions \r\n                WHERE user_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM auth.user_sessions WHERE user_id = @p_record_id;\r\n            \r\n            -- Log user_sessions deletes if any existed\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'AUTH',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'user_sessions',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = 3,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted user_sessions records for user',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n\r\n            -- Reset the @l_data_before variable\r\n            SET @l_data_before = NULL;\r\n\r\n            -- Delete user_role_mapping records and log them\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    mapping_id,\r\n                    user_id,\r\n                    role_id\r\n                FROM auth.user_role_mapping \r\n                WHERE user_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM auth.user_role_mapping WHERE user_id = @p_record_id;\r\n            \r\n            -- Log user_role_mapping deletes if any existed\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'AUTH',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'user_role_mapping',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = 3,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted user_role_mapping records for user',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n\r\n            -- Reset the @l_data_before variable\r\n            SET @l_data_before = NULL;\r\n            \r\n            -- Delete the user and log it\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    user_id,\r\n                    username,\r\n                    password_hash,\r\n                    password_salt\r\n                FROM auth.users \r\n                WHERE user_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n            \r\n            DELETE FROM auth.users\r\n            WHERE user_id = @p_record_id;\r\n\r\n            SET @l_action_type_id = 3;\r\n\r\n            IF @l_data_before IS NOT NULL AND @l_data_before != '[]'\r\n            BEGIN\r\n                EXEC core.sp_log_transaction\r\n                    @p_logging_id = @l_log_id,\r\n                    @p_source_system = 'AUTH',\r\n                    @p_user_id = @p_created_by_user_id,\r\n                    @p_object_name = 'users',\r\n                    @p_object_id = @p_record_id,\r\n                    @p_action_type_id = @l_action_type_id,\r\n                    @p_status_code_id = 1,\r\n                    @p_data_before = @l_data_before,\r\n                    @p_data_after = NULL,\r\n                    @p_diff_data = NULL,\r\n                    @p_message = 'Deleted from users',\r\n                    @p_context_id = NULL,\r\n                    @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                    @p_return_result_message = @p_return_result_message OUTPUT,\r\n                    @p_logging_id_out = @l_log_id OUTPUT;\r\n            END\r\n        END\r\n        ELSE IF @l_exists = 1\r\n        BEGIN\r\n            -- Capture data before update\r\n            SELECT @l_data_before = (\r\n                SELECT \r\n                    user_id,\r\n                    username,\r\n                    password_hash,\r\n                    password_salt\r\n                FROM auth.users \r\n                WHERE user_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            UPDATE auth.users\r\n            SET\r\n                username = @p_username,\r\n                password_hash = @p_password_hash,\r\n                password_salt = @p_password_salt\r\n            WHERE user_id = @p_record_id;\r\n\r\n            -- Capture data after update\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    user_id,\r\n                    username,\r\n                    password_hash,\r\n                    password_salt\r\n                FROM auth.users \r\n                WHERE user_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            -- Generate diff data\r\n            WITH DiffData AS (\r\n                SELECT \r\n                    'username' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].username') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].username') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].username') <> JSON_VALUE(@l_data_after, '$[0].username')\r\n                UNION ALL\r\n                SELECT \r\n                    'password_hash' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].password_hash') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].password_hash') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].password_hash') <> JSON_VALUE(@l_data_after, '$[0].password_hash')\r\n                UNION ALL\r\n                SELECT \r\n                    'password_salt' as [field],\r\n                    JSON_VALUE(@l_data_before, '$[0].password_salt') as [old_value],\r\n                    JSON_VALUE(@l_data_after, '$[0].password_salt') as [new_value]\r\n                WHERE JSON_VALUE(@l_data_before, '$[0].password_salt') <> JSON_VALUE(@l_data_after, '$[0].password_salt')\r\n            )\r\n            SELECT @l_diff_data = ( SELECT * FROM DiffData FOR JSON PATH );\r\n\r\n            SET @l_action_type_id = 2;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'users',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = @l_data_before,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = @l_diff_data,\r\n                @p_message = 'Updated users',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- Generate new GUID for insert\r\n            IF @p_record_id IS NULL\r\n                SET @p_record_id = NEWID();\r\n\r\n            INSERT INTO auth.users\r\n            (\r\n                user_id,\r\n                username,\r\n                password_hash,\r\n                password_salt\r\n            )\r\n            VALUES\r\n            (\r\n                @p_record_id,\r\n                @p_username,\r\n                @p_password_hash,\r\n                @p_password_salt\r\n            );\r\n\r\n            -- Create default role mapping for new user using the dedicated procedure\r\n            -- Note: This is safe because both operations are in the same transaction scope\r\n            -- The user INSERT above ensures the user_id exists for the FK constraint\r\n            DECLARE @l_role_result_ok BIT;\r\n            DECLARE @l_role_result_message NVARCHAR(MAX);\r\n            \r\n            EXEC auth.sp_upsert_user_role_mapping\r\n                @p_created_by_user_id = '00000000-0000-0000-0000-000000000002', -- SYSTEM user\r\n                @p_user_id = @p_record_id,\r\n                @p_role_id = 1, -- Role ID for 'NONE'\r\n                @p_loggingid = @l_log_id, -- Use same logging ID for traceability\r\n                @p_return_result_ok = @l_role_result_ok OUTPUT,\r\n                @p_return_result_message = @l_role_result_message OUTPUT;\r\n\r\n            -- Capture data after insert\r\n            SELECT @l_data_after = (\r\n                SELECT \r\n                    user_id,\r\n                    username,\r\n                    password_hash,\r\n                    password_salt\r\n                FROM auth.users \r\n                WHERE user_id = @p_record_id\r\n                FOR JSON PATH\r\n            );\r\n\r\n            SET @l_action_type_id = 1;\r\n\r\n            EXEC core.sp_log_transaction\r\n                @p_logging_id = @l_log_id,\r\n                @p_source_system = 'AUTH',\r\n                @p_user_id = @p_created_by_user_id,\r\n                @p_object_name = 'users',\r\n                @p_object_id = @p_record_id,\r\n                @p_action_type_id = @l_action_type_id,\r\n                @p_status_code_id = 1,\r\n                @p_data_before = NULL,\r\n                @p_data_after = @l_data_after,\r\n                @p_diff_data = NULL,\r\n                @p_message = 'Inserted into users',\r\n                @p_context_id = NULL,\r\n                @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n                @p_return_result_message = @p_return_result_message OUTPUT,\r\n                @p_logging_id_out = @l_log_id OUTPUT;\r\n        END\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @l_err_message NVARCHAR(MAX) = ERROR_MESSAGE();\r\n        DECLARE @l_err_number INT = ERROR_NUMBER();\r\n        DECLARE @l_err_line INT = ERROR_LINE();\r\n        DECLARE @l_err_procedure NVARCHAR(128) = ERROR_PROCEDURE();\r\n        DECLARE @l_transaction_log_id UNIQUEIDENTIFIER = NEWID();\r\n\r\n        SET @p_return_result_ok = 0;\r\n        SET @p_return_result_message = CONCAT(\r\n            'Error: ', @l_err_message,\r\n            ' (Line ', @l_err_line,\r\n            ', Procedure: ', ISNULL(@l_err_procedure,'N\/A'),\r\n            ', Error: ', @l_err_number, ')'\r\n        );\r\n\r\n        EXEC core.sp_log_transaction\r\n            @p_logging_id = @l_transaction_log_id,\r\n            @p_source_system = 'AUTH',\r\n            @p_user_id = @p_created_by_user_id,\r\n            @p_object_name = 'users',\r\n            @p_object_id = @p_record_id,\r\n            @p_action_type_id = 4, -- Error\r\n            @p_status_code_id = 2, -- Error\r\n            @p_data_before = NULL,\r\n            @p_data_after = NULL,\r\n            @p_diff_data = NULL,\r\n            @p_message = @p_return_result_message,\r\n            @p_context_id = NULL,\r\n            @p_return_result_ok = @p_return_result_ok OUTPUT,\r\n            @p_return_result_message = @p_return_result_message OUTPUT,\r\n            @p_loggingid_out = @l_transaction_log_id OUTPUT;\r\n    END CATCH\r\nEND",
            "object_id": 1858105660,
            "Parameters": [
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_users",
                    "parameter_id": 1,
                    "ParameterName": "@p_record_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1858105660
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_users",
                    "parameter_id": 2,
                    "ParameterName": "@p_created_by_user_id",
                    "DataType": "uniqueidentifier",
                    "max_length": 16,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1858105660
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_users",
                    "parameter_id": 3,
                    "ParameterName": "@p_is_delete",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1858105660
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_users",
                    "parameter_id": 4,
                    "ParameterName": "@p_username",
                    "DataType": "varchar",
                    "max_length": 32,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1858105660
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_users",
                    "parameter_id": 5,
                    "ParameterName": "@p_password_hash",
                    "DataType": "varchar",
                    "max_length": 244,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1858105660
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_users",
                    "parameter_id": 6,
                    "ParameterName": "@p_password_salt",
                    "DataType": "varchar",
                    "max_length": 244,
                    "precision": 0,
                    "scale": 0,
                    "is_output": false,
                    "object_id": 1858105660
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_users",
                    "parameter_id": 7,
                    "ParameterName": "@p_return_result_ok",
                    "DataType": "bit",
                    "max_length": 1,
                    "precision": 1,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1858105660
                },
                {
                    "SchemaName": "auth",
                    "ProcedureName": "sp_upsert_users",
                    "parameter_id": 8,
                    "ParameterName": "@p_return_result_message",
                    "DataType": "nvarchar",
                    "max_length": -1,
                    "precision": 0,
                    "scale": 0,
                    "is_output": true,
                    "object_id": 1858105660
                }
            ]
        }
    ]
}